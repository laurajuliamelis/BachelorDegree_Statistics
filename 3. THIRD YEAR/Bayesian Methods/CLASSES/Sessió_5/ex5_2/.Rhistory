x1 <- 4; N1.mitjana <- 5
x2 <- 3; N2.mitjana <- 5
x3 <- 4; N3.mitjana <- 5
p1 <- ppois(N1.mitjana, lambda=x1)
p1 <- ppois(N1.mitjana, lambda=x1, lower=F)
ppois(5, lambda=4, lower=F)
qpois(5, lambda=4, lower=F)
qpois(0.214, lambda=4, lower=F)
qpois(0.15629, lambda=4, lower=F)
(4^5/factorial(5))*e
e
exp(1)
(4^5/factorial(5))*exp(1)^(-4)
ppois(N1.mitjana, lambda=x1, lower=F)
d
d
d
d
d
d
(4^5/factorial(5))*exp(1)^(-4)
ppois(5, lambda=4, lower=F)
ppois(5, lambda=4, lower=T)
exp(1)
ppois(5, lambda=3, lower=F)
(3^5/factorial(5))*exp(1)^(-3)
(3^5/factorial(5))*(2.718281828459045235360)^(-3)
n1 <- 30; N1.mitjana <- 50
n2 <- 20; N2.mitjana <- 50
n <- n1+n2
# r ?s n1+1, primera mostra amb la moneda trucada
p1 <- 0.5
p2 <- 0.7
cat("\n",
"prob cara 1a moneda  ", p1, "\n",
"prob cara 2a monbeda ", p2, "\n",
"punt de canvi        ", n1+1,  "\n")
N1 <- rpois(n1, N1.mitjana)
N2 <- rpois(n2, N2.mitjana)
y1 <- rbinom(n1, size=N1, prob=p1)
y2 <- rbinom(n2, size=N2, prob=p2)
y1
N1
N2
N1 <- rpois(x1, N1.mitjana)
N2 <- rpois(x2, N2.mitjana)
N3 <- rpois(x3, N3.mitjana)
N1
N2
N3
x1 <- 4; N1.mitjana <- 5
x2 <- 3; N2.mitjana <- 5
x3 <- 4; N3.mitjana <- 5
N1 <- rpois(x1, N1.mitjana)
N2 <- rpois(x2, N2.mitjana)
N3 <- rpois(x3, N3.mitjana)
N1
N2
N3
N1 <- rpois(n1, N1.mitjana)
N2 <- rpois(n2, N2.mitjana)
y1 <- rbinom(n1, size=N1, prob=p1)
y2 <- rbinom(n2, size=N2, prob=p2)
cbind(c(y1,y2),c(N1,N2))
cbind(c(N1,N2,N3))
cbind(N1,N2,N3)
y1
y2
n1 <- 30; N1.mitjana <- 50
n2 <- 20; N2.mitjana <- 50
n <- n1+n2
# r ?s n1+1, primera mostra amb la moneda trucada
p1 <- 0.5
p2 <- 0.7
cat("\n",
"prob cara 1a moneda  ", p1, "\n",
"prob cara 2a monbeda ", p2, "\n",
"punt de canvi        ", n1+1,  "\n")
############## Generaci? dades  #############
N1 <- rpois(n1, N1.mitjana)
N2 <- rpois(n2, N2.mitjana)
y1 <- rbinom(n1, size=N1, prob=p1)
y2 <- rbinom(n2, size=N2, prob=p2)
cbind(c(y1,y2),c(N1,N2))
y1
N1
cbind(c(y1,y2),c(N1,N2))
y1
N1
y2
N2
par(mfrow=c(1,1))
plot(1:n,c(y1/N1,y2/N2), pch=19, ylab="% cares")
x1 <- 4; N1.mitjana <- 5
x2 <- 3; N2.mitjana <- 5
x3 <- 4; N3.mitjana <- 5
n <- x1+x2+x3
p1 <- ppois(N1.mitjana, lambda=x1, lower=F)
p2 <- ppois(N2.mitjana, lambda=x2, lower=F)
p2 <- ppois(N3.mitjana, lambda=x3, lower=F)
x1 <- 4; N1.mitjana <- 5
x2 <- 3; N2.mitjana <- 5
x3 <- 4; N3.mitjana <- 5
n <- x1+x2+x3
p1 <- ppois(N1.mitjana, lambda=x1, lower=F)
p2 <- ppois(N2.mitjana, lambda=x2, lower=F)
p2 <- ppois(N3.mitjana, lambda=x3, lower=F)
p3 <- ppois(N3.mitjana, lambda=x3, lower=F)
p2 <- ppois(N2.mitjana, lambda=x2, lower=F)
N1 <- rpois(x1, N1.mitjana)
N2 <- rpois(x2, N2.mitjana)
N3 <- rpois(x3, N3.mitjana)
y1 <- rbinom(x1, size=N1, prob=p1)
y2 <- rbinom(x2, size=N2, prob=p2)
y3 <- rbinom(x3, size=N3, prob=p3)
par(mfrow=c(1,1))
plot(1:n,c(y1/N1,y2/N2, y3/N3), pch=19, ylab="% parades")
n1 <- 30; N1.mitjana <- 50
n2 <- 20; N2.mitjana <- 50
n <- n1+n2
# r ?s n1+1, primera mostra amb la moneda trucada
p1 <- 0.5
p2 <- 0.7
N1 <- rpois(n1, N1.mitjana)
N2 <- rpois(n2, N2.mitjana)
y1 <- rbinom(n1, size=N1, prob=p1)
y2 <- rbinom(n2, size=N2, prob=p2)
N1
N2
y11
y1
y2
cbind(c(y1,y2),c(N1,N2))
par(mfrow=c(1,1))
plot(1:n,c(y1/N1,y2/N2), pch=19, ylab="% cares")
c(y1/N1,y2/N2)
y1/N1
rpois(4,5)
rpois(3,5)
N1 <- rpois(x1, N1.mitjana)
N2 <- rpois(x2, N2.mitjana)
N3 <- rpois(x3, N3.mitjana)
N1
N2
N3
x1 <- 4; N1.mitjana <- 5
x2 <- 3; N2.mitjana <- 5
x3 <- 4; N3.mitjana <- 5
n <- x1+x2+x3
p1 <- ppois(N1.mitjana, lambda=n1, lower=F)
p2 <- ppois(N2.mitjana, lambda=n2, lower=F)
p3 <- ppois(N3.mitjana, lambda=n3, lower=F)
```
Generació de dades:
```{r}
N1 <- rpois(x1, N1.mitjana)
N2 <- rpois(x2, N2.mitjana)
N3 <- rpois(x3, N3.mitjana)
N1
N2
N3
par(mfrow=c(1,1))
plot(1:n,c(N1,N2, N3), pch=19, ylab="% parades")
plot(1:n,c(N1,N2, N3), pch=19, ylab="nombre deparades")
plot(1:n,c(N1,N2, N3), pch=19, ylab="nombre de parades")
x1 <- 4; lambda1 <- 5
x2 <- 3; lambda2 <- 5
x3 <- 4; lambda3 <- 5
n <- x1+x2+x3
N1 <- rpois(x1, lambda1)
N2 <- rpois(x2, lambda2)
N3 <- rpois(x3, lambda3)
par(mfrow=c(1,1))
plot(1:n,c(N1,N2, N3), pch=19, ylab="nombre de parades")
N1
N2
N3
x1 <- 4; lambda1 <- 5
x2 <- 3; lambda2 <- 5
x3 <- 4; lambda3 <- 5
n <- x1+x2+x3
```
Generació de dades:
```{r}
N1 <- rpois(x1, lambda1)
N2 <- rpois(x2, lambda2)
N3 <- rpois(x3, lambda3)
par(mfrow=c(1,1))
plot(1:n,c(N1,N2, N3), pch=19, ylab="nombre de parades")
sink(paste(path.bug,"BinChangePoint.bug",sep=""))
cat("
model  {
for (i in 1:n) {
Y[i] ~ dbin(theta[I[i]] , N[i])
I[i]<-1+step(i-r) # r is the change.point
}
theta[1]~dbeta(a1[1],a1[2])
theta[2]~dbeta(a2[1],a2[2])
r~dcat(p[])
}
",fill=TRUE)
sink()
path.bug <- "/Users/Laura/Desktop/"
sink(paste(path.bug,"BinChangePoint.bug",sep=""))
cat("
model  {
for (i in 1:n) {
Y[i] ~ dbin(theta[I[i]] , N[i])
I[i]<-1+step(i-r) # r is the change.point
}
theta[1]~dbeta(a1[1],a1[2])
theta[2]~dbeta(a2[1],a2[2])
r~dcat(p[])
}
",fill=TRUE)
sink()
r1 <- n1+1
r2 <- n2+1
sink(paste( "/Users/Laura/Desktop/","Autobusos.bug",sep=""))
cat("
model  {
for (i in 1:n) {
Y[i] ~ dpois(lambda[i])
I1[i]<-1+step(i-r1)   # r is the change.point // step: 1 si (i-r1) >= 0; 0 otherwise
I2[i]<-1+step(i-r2)
}
theta[1]~dgamma(a1[1],a1[2])
theta[2]~dgamma(a2[1],a2[2])
theta[3]~dgamma(a3[1],a3[2])
r1~dcat(p[])
r2~dcat(p[])
}
",fill=TRUE)
sink()
prior <- c(alpha = 10, beta = 0.5)
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 1, beta = 1)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
plot(function(x)dgamma(x, prior[1], prior[2]), ylab="", xlab = expression(lambda))
prior <- c(alpha = 10, beta = 0.5)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
title("prior distribution")
prior <- c(alpha = 5, beta = 0.5)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
title("prior distribution")
prior <- c(alpha = 5, beta = 0.01)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
title("prior distribution")
prior <- c(alpha = 5, beta = 0.1)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 5, beta = 2)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
title("prior distribution")
prior <- c(alpha = 5, beta = 10)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
title("prior distribution")
prior <- c(alpha = 10, beta = 10)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 20, beta = 10)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 20, beta = 30)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 20, beta = 10)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 20, beta = 3)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 5, beta = 3)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 5, beta = 23)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
title("prior distribution")
prior <- c(alpha = 15, beta = 23)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
title("prior distribution")
prior <- c(alpha = 5, beta = 2)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 15, beta = 0.2)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 15, beta = 0.9)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 15, beta = 0.5)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 5, beta = 0.5)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 5, beta = 0.4)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 5, beta = 0.6)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 5, beta = 0.7)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 5, beta = 0.9)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 7
prior <- c(alpha = 7, beta = 0.9)
prior <- c(alpha = 7, beta = 0.9)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 3, beta = 0.9)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 3, beta = 1)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
prior <- c(alpha = 3, beta = 1)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
title("prior distribution")
prior <- c(alpha = 5, beta = 1)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
title("prior distribution")
a1 <- c(5,1) # valors per la gamma de theta1
a2 <- c(5,1) # valors per la gamma de theta2
a3 <- c(5,1) # valors per la gamma de theta3
prob.r <- rep(1/n,n) # probabilititats per r
par(mfrow=c(1,3))
plot(function(x)dbeta(x,a1[1],a1[2]), xlab="",ylab="", main="priori de theta1")
plot(function(x)dbeta(x,a2[1],a2[2]), xlab="",ylab="", main="priori de theta2")
plot(1:n, prob.r, lwd=2, ty="h", xlab="",ylab="", main="prior de r")
a1 <- c(5,1) # valors per la gamma de theta1
a2 <- c(5,1) # valors per la gamma de theta2
a3 <- c(5,1) # valors per la gamma de theta3
prob.r <- rep(1/n,n) # probabilititats per r
par(mfrow=c(1,3))
plot(function(x)dgamma(x,a1[1],a1[2]), xlab="",ylab="", main="priori de theta1")
plot(function(x)dgamma(x,a2[1],a2[2]), xlab="",ylab="", main="priori de theta2")
plot(function(x)dgamma(x,a3[1],a3[2]), xlab="",ylab="", main="priori de theta3")
plot(1:n, prob.r, lwd=2, ty="h", xlab="",ylab="", main="prior de r")
par(mfrow=c(2,2))
plot(function(x)dgamma(x,a1[1],a1[2]), xlab="",ylab="", main="priori de theta1")
plot(function(x)dgamma(x,a2[1],a2[2]), xlab="",ylab="", main="priori de theta2")
plot(function(x)dgamma(x,a3[1],a3[2]), xlab="",ylab="", main="priori de theta3")
plot(1:n, prob.r, lwd=2, ty="h", xlab="",ylab="", main="prior de r")
a1 <- c(5,0.8) # valors per la gamma de theta1
plot(function(x)dgamma(x,a1[1],a1[2]), xlab="",ylab="", main="priori de theta1")
a1 <- c(5,8) # valors per la gamma de theta1
plot(function(x)dgamma(x,a1[1],a1[2]), xlab="",ylab="", main="priori de theta1")
prior <- c(alpha = 5, beta = 1)
par(mfrow=c(1,2))
plot(function(x)dgamma(x, prior[1], prior[2]), xlim=c(0,60), ylab="", xlab = expression(lambda))
a1 <- c(5,8) # valors per la gamma de theta1
a1 <- c(5,1) # valors per la gamma de theta1
plot(function(x)dgamma(x,a1[1],a1[2]),xlim=c(0,20), xlab="",ylab="", main="priori de theta1")
a1 <- c(5,1) # valors per la gamma de theta1
a2 <- c(5,1) # valors per la gamma de theta2
a3 <- c(5,1) # valors per la gamma de theta3
prob.r <- rep(1/n,n) # probabilititats per r
par(mfrow=c(2,2))
plot(function(x)dgamma(x,a1[1],a1[2]),xlim=c(0,20), xlab=expression(lambda) ,ylab="", main="priori de theta1")
plot(function(x)dgamma(x,a2[1],a2[2]),xlim=c(0,20), xlab=expression(lambda) ,ylab="", main="priori de theta2")
plot(function(x)dgamma(x,a3[1],a3[2]),xlim=c(0,20), xlab=expression(lambda) ,ylab="", main="priori de theta3")
plot(1:n, prob.r, lwd=2, ty="h", xlab="",ylab="", main="prior de r")
y1 <- rpois(x1, lambda1)
y2 <- rpois(x2, lambda2)
y3 <- rpois(x3, lambda3)
par(mfrow=c(1,1))
plot(1:n,c(y1,y2, y3), pch=19, ylab="nombre de parades")
```
N1 <- rpois(x1, lambda1)
N2 <- rpois(x2, lambda2)
N3 <- rpois(x3, lambda3)
par(mfrow=c(1,1))
plot(1:n,c(y1/N1,y2/N2, y3/N3), pch=19, ylab="nombre de parades")
dades <- list(n=n, Y = c(y1,y2,y3),  p = prob.r, a1 = a1, a2 = a2)
x1 <- 4; lambda1 <- 5
x2 <- 3; lambda2 <- 5
x3 <- 4; lambda3 <- 5
n <- x1+x2+x3
r1 <- n1+1
r2 <- n2+1
r1 <- x1+1
r2 <- x2+1
y1 <- rpois(x1, lambda1)
y2 <- rpois(x2, lambda2)
y3 <- rpois(x3, lambda3)
par(mfrow=c(1,1))
plot(1:n,c(y1,y2, y3), pch=19, ylab="nombre de parades")
plot(1:n,c(y1,y2, y3), pch=19, ylab="nombre de parades")
sink(paste( "/Users/Laura/Desktop/","Autobusos.bug",sep=""))
cat("
model  {
for (i in 1:n) {
Y[i] ~ dpois(lambda[i])
I1[i]<-1+step(i-r1)   # r is the change.point // step: 1 si (i-r1) >= 0; 0 otherwise
I2[i]<-1+step(i-r2)
}
theta[1]~dgamma(a1[1],a1[2])
theta[2]~dgamma(a2[1],a2[2])
theta[3]~dgamma(a3[1],a3[2])
r1~dcat(p[])
r2~dcat(p[])
}
",fill=TRUE)
sink()
a1 <- c(5,1) # valors per la gamma de theta1
a2 <- c(5,1) # valors per la gamma de theta2
a3 <- c(5,1) # valors per la gamma de theta3
prob.r <- rep(1/n,n) # probabilititats per r
par(mfrow=c(2,2))
plot(function(x)dgamma(x,a1[1],a1[2]),xlim=c(0,20), xlab=expression(lambda) ,ylab="", main="priori de theta1")
plot(function(x)dgamma(x,a2[1],a2[2]),xlim=c(0,20), xlab=expression(lambda) ,ylab="", main="priori de theta2")
plot(function(x)dgamma(x,a3[1],a3[2]),xlim=c(0,20), xlab=expression(lambda) ,ylab="", main="priori de theta3")
plot(1:n, prob.r, lwd=2, ty="h", xlab="",ylab="", main="prior de r")
dades <- list(n=n, Y = c(y1,y2,y3),  p = prob.r, a1 = a1, a2 = a2)
inits <- list(list(theta =c(0.5,0.5), r=trunc(n*0.5)),
list(theta =c(0.1,0.9), r=trunc(n*0.25)),
list(theta =c(0.9,0.1), r=trunc(n*0.75)))
parameters <- c("theta", "r")
Iter <- 1500
Burn <- 100
Thin <- 1
Chain <- 3
canvi <- jags(dades, inits, parameters.to.save=parameters,
model=paste(path.bug,"Autobusos.bug",sep=""),
n.iter=(Iter+Burn),n.burnin=Burn, n.thin=1, n.chains=Chain)
library(R2jags)
install.packages('R2jags')
library(R2jags)
canvi <- jags(dades, inits, parameters.to.save=parameters,
model=paste(path.bug,"Autobusos.bug",sep=""),
n.iter=(Iter+Burn),n.burnin=Burn, n.thin=1, n.chains=Chain)
