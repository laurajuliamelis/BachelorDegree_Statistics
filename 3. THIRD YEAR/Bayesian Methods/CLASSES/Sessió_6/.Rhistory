install.packages(c("akima", "ape", "BayesX", "BCA", "biclust", "car", "caret", "clinfun", "cmprsk", "colorspace", "conf.design", "cubature", "DAAG", "degreenet", "depthTools", "devtools", "DiceDesign", "dichromat", "digest", "distr", "distrEx", "DoE.base", "Ecdat", "effects", "epiR", "FactoMineR", "fAsianOptions", "fCopulae", "fImport", "flexmix", "forecast", "fpc", "FrF2", "gbm", "ggplot2", "gmp", "gRbase", "gWidgetstcltk", "hexbin", "HH", "igraph", "inline", "iplots", "isa2", "kernlab", "KernSmooth", "lattice", "lavaan", "maps", "maptools", "Matrix", "mboost", "meta", "metafor", "metatest", "minpack.lm", "misc3d", "miscTools", "missMDA", "mondate", "multcomp", "network", "nlme", "np", "pastecs", "PerformanceAnalytics", "plotrix", "pmml", "polspline", "pracma", "psych", "qgraph", "quantreg", "RandomFields", "rattle", "Rcmdr", "RcmdrPlugin.BCA", "RcmdrPlugin.depthTools", "RcmdrPlugin.DoE", "RcmdrPlugin.EZR", "RcmdrPlugin.HH", "RcmdrPlugin.KMggplot2", "RcmdrPlugin.MPAStats", "RcmdrPlug
in.orloca", "RcmdrPlugin.SCDA", "RcmdrPlugin.SLC", "RcmdrPlugin.StatisticalURV", "RcmdrPlugin.steepness", "RcmdrPlugin.survival", "RcmdrPlugin.TeachingDemos", "RcppArmadillo", "RcppEigen", "RCurl", "rgdal", "rgenoud", "rgeos", "rgl", "rJava", "robustbase", "rpanel", "rsm", "RWeka", "RWekajars", "SCVA", "sem", "seriation", "sgeostat", "shapefiles", "signal", "slam", "SLC", "sna", "sp", "spatstat", "startupmsg", "statmod", "sudoku", "survey", "survival", "SweaveListingUtils", "tcltk2", "TeachingDemos", "timeSeries", "tm", "WriteXLS", "XLConnect", "XML", "xtable", "xts", "Zelig"))
install.packages(c("acepack", "ade4", "AER", "agricolae", "akima", "animation", "ape", "aplpack", "arules", "arulesViz", "BayesX", "BCA", "bdsmatrix", "biclust", "biglm", "bitops", "BsMD", "Cairo", "car", "caret", "caTools", "cba", "chron", "clinfun", "clue", "cluster", "clv", "cmprsk", "coin", "colorspace", "CompQuadForm", "conf.design", "contrast", "corpcor", "crp.CSFP", "cubature", "DAAG", "DBI", "degreenet", "deldir", "depthTools", "descr", "deSolve", "devtools", "DiceDesign", "dichromat", "digest", "diptest", "distr", "distrEx", "doBy", "DoE.base", "DoE.wrapper", "dynlm", "e1071", "Ecdat", "effects", "ellipse", "ENmisc", "epiR", "ergm", "evaluate", "extrafont", "FactoMineR", "fArma", "fAsianOptions", "fAssets", "fBasics", "fCopulae", "fdrtool", "fExtremes", "fGarch", "fields", "fImport", "flexclust", "flexmix", "FME", "fNonlinear", "fOptions", "foreach", "forecast", "foreign", "Formula", "fortunes", "fpc", "fRegression", "FrF2", "fTrading", "fUnitRoots", "gam", "gamlss", "gamlss.
data", "gamlss.dist", "gbm", "gdata", "geoRglm", "ggplot2", "ggthemes", "gmodels", "gmp", "gRbase", "gregmisc", "gtools", "gWidgetsRGtk2", "gWidgetstcltk", "hergm", "hexbin", "HH", "Hmisc", "HSAUR", "igraph", "ineq", "inline", "iplots", "ipred", "isa2", "JGR", "jpeg", "kernlab", "KernSmooth", "kinship2", "labeling", "lattice", "latticeExtra", "lavaan", "lme4", "lmtest", "locfit", "logspline", "lokern", "lpSolve", "lpSolveAPI", "mapproj", "maps", "maptools", "Matrix", "maxLik", "mboost", "mclust", "MCMCpack", "MEMSS", "meta", "metafor", "metatest", "mgcv", "mice", "minpack.lm", "misc3d", "miscTools", "missMDA", "mlmRev", "mlogit", "mnormt", "modeltools", "mondate", "MPV", "multcomp", "munsell", "mvtnorm", "network", "networkDynamic", "networksis", "nlme", "nnet", "nor1mix", "np", "optmatch", "ordinal", "oz", "party", "pastecs", "PBSmapping", "pcalg", "PerformanceAnalytics", "plm", "plotrix", "pmml", "png", "polspline", "pracma", "pROC", "prodlim", "proxy", "psych", "qgraph", "quadprog"
, "quantreg", "R2HTML", "RandomFields", "randtoolbox", "RANN", "rattle", "Rcmdr", "RcmdrPlugin.BCA", "RcmdrPlugin.depthTools", "RcmdrPlugin.doBy", "RcmdrPlugin.DoE", "RcmdrPlugin.EACSPIR", "RcmdrPlugin.EBM", "RcmdrPlugin.EZR", "RcmdrPlugin.HH", "RcmdrPlugin.KMggplot2", "RcmdrPlugin.MPAStats", "RcmdrPlugin.orloca", "RcmdrPlugin.SLC", "RcmdrPlugin.StatisticalURV", "RcmdrPlugin.survival", "RcmdrPlugin.TeachingDemos", "RcmdrPlugin.UCA", "Rcpp", "RcppArmadillo", "RcppEigen", "Rcsdp", "RCurl", "ref", "relations", "relax", "relevent", "rgdal", "rgenoud", "rgeos", "rgl", "Rglpk", "RgoogleMaps", "rJava", "rjson", "Rmpfr", "rms", "rngWELL", "robustbase", "ROCR", "RODBC", "rootSolve", "rpanel", "rpart", "Rserve", "rsm", "RSQLite", "Rsymphony", "Rttf2pt1", "RWeka", "RWekajars", "sampling", "sandwich", "scatterplot3d", "SCMA", "SCRT", "SCVA", "sem", "SensoMineR", "seriation", "sets", "sfsmisc", "sgeostat", "shapefiles", "shapes", "signal", "simecol", "slam", "SLC", "sm", "sna", "snow", "Snowball",
"sos", "sp", "spam", "SparseM", "spatstat", "spdep", "splancs", "stabledist", "startupmsg", "statmod", "strucchange", "subselect", "sudoku", "survey", "survival", "SweaveListingUtils", "tcltk2", "TeachingDemos", "testthat", "tikzDevice", "timeDate", "timeSeries", "tm", "tree", "tripack", "truncreg", "trust", "tseries", "TSP", "tuneR", "urca", "vcd", "verification", "VGAM", "VIM", "waveslim", "whisker", "WriteXLS", "XLConnect", "XML", "xtable", "xts", "Zelig", "zoo"))
install.packages(c("class", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial"))
q()
install.packages("shinyBS")
install.packages("swamp")
library()
install.packages("SWSamp",
repos=c("http://www.statistica.it/gianluca/R",
"https://cran.rstudio.org",
"https://www.math.ntnu.no/inla/R/stable"),
dependencies=TRUE
)
install.packages("SWSamp",
repos=c("http://www.statistica.it/gianluca/R",
"https://cran.rstudio.org",
"https://www.math.ntnu.no/inla/R/stable"),
dependencies=TRUE
)
update.packages(ask='graphics',checkBuilt=TRUE)
q()
update()
upgrade()
q()
path.bug <- "G:/200547 - METODES BAYESIANS/sessio 6/"
install.packages('R2jags')
library(R2jags)
n1 <- 30; N1.mitjana <- 50
n2 <- 20; N2.mitjana <- 50
n <- n1+n2
p1 <- 0.5
p2 <- 0.7
cat("\n",
"prob cara 1a moneda  ", p1, "\n",
"prob cara 2a monbeda ", p2, "\n",
"punt de canvi        ", n1+1,  "\n")
N1 <- rpois(n1, N1.mitjana)
N2 <- rpois(n2, N2.mitjana)
y1 <- rbinom(n1, size=N1, prob=p1)
y2 <- rbinom(n2, size=N2, prob=p2)
y1
y2
cbind(c(y1,y2),c(N1,N2))
par(mfrow=c(1,1))
plot(1:n,c(y1/N1,y2/N2), pch=19, ylab="% cares")
sink(paste(path.bug,"BinChangePoint.bug",sep=""))
sink(paste(path.bug,"BinChangePoint.bug",sep=""))
path.bug <- "G:/200547 - METODES BAYESIANS/sessio 6/"
sink(paste(path.bug,"BinChangePoint.bug",sep=""))
setwd("G:/200547 - METODES BAYESIANS/sessio 6")
sink(paste(path.bug,"BinChangePoint.bug",sep=""))
path.bug <- "E:/Mètodes Bayesians/CLASSE/Sessió 6/"
sink(paste(path.bug,"BinChangePoint.bug",sep=""))
setwd("E:/Mètodes Bayesians/CLASSES/Sessió 6")
sink(paste(path.bug,"BinChangePoint.bug",sep=""))
path.bug <- "E:/Mètodes Bayesians/CLASSES/Sessió 6/"
sink(paste(path.bug,"BinChangePoint.bug",sep=""))
cat("
model  {
for (i in 1:n) {
Y[i] ~ dbin(theta[I[i]] , N[i])
I[i]<-1+step(i-r) # r is the change.point
}
theta[1]~dbeta(a1[1],a1[2])
theta[2]~dbeta(a2[1],a2[2])
r~dcat(p[])
}
",fill=TRUE)
sink()
a1 <- c(1,1) # valors per la beta de theta1
a2 <- c(1,1) # valors per la beta de theta2
prob.r <- rep(1/n,n) # probabilititats per r
par(mfrow=c(1,3))
plot(function(x)dbeta(x,a1[1],a1[2]), xlab="",ylab="", main="priori de theta1")
plot(function(x)dbeta(x,a2[1],a2[2]), xlab="",ylab="", main="priori de theta2")
plot(1:n, prob.r, lwd=2, ty="h", xlab="",ylab="", main="prior de r")
dades <- list(n=n, Y = c(y1,y2), N = c(N1,N2),
p = prob.r, a1 = a1, a2 = a2)
inits <- list(list(theta =c(0.5,0.5), r=trunc(n*0.5)),
list(theta =c(0.1,0.9), r=trunc(n*0.25)),
list(theta =c(0.9,0.1), r=trunc(n*0.75)))
parameters <- c("theta", "r")
Iter <- 1500
Burn <- 100
Thin <- 1
Chain <- 3
canvi <- jags(dades, inits, parameters.to.save=parameters,
model=paste(path.bug,"BinChangePoint.bug",sep=""),
n.iter=(Iter+Burn),n.burnin=Burn, n.thin=1, n.chains=Chain)
traceplot(canvi , mfrow = c(1,1), varname = c("theta", "r"), col=c("black","red","yellow"))
table(r)
dades <- list(n=n, Y = c(y1,y2), N = c(N1,N2),
p = prob.r, a1 = a1, a2 = a2)
inits <- list(list(theta =c(0.5,0.5), r=trunc(n*0.5)),
list(theta =c(0.1,0.9), r=trunc(n*0.25)),
list(theta =c(0.9,0.1), r=trunc(n*0.75)))
parameters <- c("theta", "r")
Iter <- 1500
Burn <- 100
Thin <- 1
Chain <- 3
traceplot(canvi , mfrow = c(1,1), varname = c("theta", "r"), col=c("black","red","yellow"))
n.iter=(Iter+Burn),n.burnin=Burn, n.thin=1, n.chains=Chain)
traceplot(canvi , mfrow = c(1,1), varname = c("theta", "r"), col=c("black","red","yellow"))
plot(function(x)dbeta(x,a1[1],a1[2]), xlab="",ylab="", main="priori de theta1")
print(canvi)
attach.jags(canvi )
table(r)
table(r)
round(table(r)/sum(table(r)),4)
r
table(r)
round(table(r)/sum(table(r)),4)
par(mfrow=c(1,2))
boxplot(theta[,1],theta[,2], col="blue")
plot(table(r)/sum(table(r)), xlim=c(min(as.numeric(names(table(r))))-1,max(as.numeric(names(table(r))))+1), main="change point", lwd=3)
detach.jags()
n1 <- 30; N1.mitjana <- 20
n2 <- 20; N2.mitjana <- 20
n <- n1+n2
p1 <- 0.5
p2 <- 0.7
cat("\n",
"prob cara 1a moneda  ", p1, "\n",
"prob cara 2a monbeda ", p2, "\n",
"punt de canvi       ", n1,  "\n")
N1 <- rpois(n1, N1.mitjana)
N2 <- rpois(n2, N2.mitjana)
y1 <- rbinom(n1, size=N1, prob=p1)
y2 <- rbinom(n2, size=N2, prob=p2)
cbind(c(y1,y2),c(N1,N2))
par(mfrow=c(1,1))
plot(1:n,c(y1/N1,y2/N2), pch=19, ylab="% cares")
y <- c(y1,y2)
N <- c(N1,N2)
a1 =c(1,1)
a2 =c(1,1)
M = 10000
r.support = 1:n
r = rep(NA,M)
theta1 = rep(NA,M)
theta2 = rep(NA,M)
theta1[1] = 0.5
theta2[1] = 0.5
r[1] = 20
print(canvi)
# Utilities
r.aus = function(r,p1,p2,y){
if(r<n){
aus1 = p1^(sum(y[1:r]))
aus2 = (1-p1)^(sum(N[1:r]) - sum(y[1:r]))
aus3 = p2^(sum(y[(r+1):n]))
aus4 = (1-p2)^(sum(N[(r+1):n]) - sum(y[(r+1):n]))
out = aus1*aus2*aus3*aus4
}else{
aus1 = p1^(sum(y[1:n]))
aus2 = (1-p1)^(sum(N[1:n]) - sum(y[1:n]))
out = aus1*aus2
}
return(out)
}
r.fc = function(p1,p2,y){
vecc = rep(NA,n)
for(i in 1:n){
vecc[i] = r.aus(i,p1,p2,y)
}
out = vecc/sum(vecc)
return(out)
}
# Gibbs Sampling
for(m in 2:M){
theta1[m] = rbeta(1,a1[1] + sum(y[1:r[m-1]]), a1[2] + sum(N[1:r[m-1]]) - sum(y[1:r[m-1]]))
theta2[m] = rbeta(1,a2[1] + sum(y[(r[m-1]+1):n]), a2[2] + sum(N[(r[m-1]+1):n]) - sum(y[(r[m-1]+1):n]))
r[m] = sample(r.support,size=1,prob=r.fc(theta1[m],theta2[m],y))
}
par(mfrow=c(3,1))
plot(1:M,theta1,type="l")
plot(1:M,theta2,type="l")
plot(1:M,r,type="l")
r <- r[2:M]
theta1 <- theta1[2:M]
theta2 <- theta2[2:M]
par(mfrow=c(1,2))
boxplot(theta1,theta2, col="blue")
plot(table(r)/sum(table(r)), xlim=c(min(as.numeric(names(table(r))))-1,max(as.numeric(names(table(r))))+1), main="change point", lwd=3)
