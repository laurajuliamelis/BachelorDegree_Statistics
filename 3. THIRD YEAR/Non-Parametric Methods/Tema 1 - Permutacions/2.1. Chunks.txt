#Dades
dat<-read.table("E:/MNPR 17-18/anticonceptive.txt", header=TRUE)
dat
class(dat$EEAUC)


## Indicis de normalitat (o no) de les dades:

hist(dat[dat[,"tratam"]=="P","EEAUC"], main="Nivells de EE pel Tractament Placebo",  xlab= "Nivells de EE sota la corba AUC")
hist(dat[dat[,"tratam"]=="D","EEAUC"],main="Nivells de EE amb presència de la Droga",  xlab= "Nivells de EE sota la corba AUC")

hist(dat[dat[,"tratam"]=="P","NETAUC"],main="Nivells de NET pel Tractament Placebo",  xlab= "Nivells de NE sota la corba AUC")
hist(dat[dat[,"tratam"]=="D","NETAUC"],main="Nivells de NET amb presència de la Droga",  xlab= "Nivells de NET sota la corba AUC")

## Indicis d'igualtat de la dispersió (o no) de les dades P vs D

boxplot(EEAUC ~ tratam, main="Boxplot dels nivells EE sota corba AUC",data = dat)
boxplot(NETAUC ~ tratam, main="Boxplot dels nivells NET sota corba AuC",data = dat)

## Recuperant les grandàries mostrals

n <- tapply( dat[,"EEAUC"], dat[,"tratam"], length) # Mides mostrals
n                 # Ara 'n' conté les mides mostrals de cada grup, n[1] == n[2] == 11
N <- sum(n)       # 'N' serà el total d'observacions, 22
n1 <- n[1]
n2 <- n[2]

## Reordenant els valors d'EEAUC (els 11 primers corresponen a "D")

auc <- dat[order(dat$tratam), "EEAUC"]
auc
auc[1:n1]         # Valors EEAUC per tots els casos "D"
auc[(n1+1):N]     # i per tots els casos "P"


# Comparació de mitjanes de 2 grups: t-Student

t.test(auc[1:n1], auc[(n1+1):N], var.equal = TRUE)

PERMUTACIONS

#Una mica de combinatòria


combn(5,3)  # equivalente a 
combn(1:5,3)

#Nombre total de Combinacions

choose(N,n1)



# PAS 0: Elecció Estadístic

tStat <- function(indexs, vector.dades) {
  t.test(vector.dades[indexs], vector.dades[-indexs], var.equal = TRUE)$statistic
}


# PAS 1: CÀLCUL de l'estadístic t per LES DADES ORIGINALS:


auc
tauc <- tStat(1:n1, auc) 
tauc


# Pas 2: ENUMEREM TOTES les possibles combinacions dels índex 1:22 escollits en grups de 11:


cindexs <- as.data.frame(combn(1:N, n1))


# Pas 3: CÀLCUL de l'estadístic t de Student PER CADASCUNA DE LES COMBINACIONS (reordenacions dels indexs)
**(¡AIXÒ SI QUE TARDA ESTONA!)**:


tPerms <- vapply(cindexs, tStat, auc, FUN.VALUE = 0.0)

# Pas 4: p-valor: **proporció de vegades** en que l'estadístic calculat sobre les en el pas anterior 
ES TANT O MÉS EXTREM que el calculat sobre les DADES ORIGINALS:

sum(tPerms >= tauc) / length(tPerms)


# Pas 5: El p-valor ES REFEREIX al test UNILATERAL i CONCLUEM H1 :  mitja de D > mitja de P. 

# Consideracions (1/3): ELS VALOR CRÍTICS, PER AQUESTES DADES


alphas <- c(0.10, 0.05, 0.025, 0.01)
tabla <- quantile( tPerms, probs = 1 - alphas)
names(tabla) <- alphas
tabla


# Consideracions (2/3).
# TEST DE PERMUTACIONS el que realment IMPORTA ÉS L'ORDRE en el que quedan ELS VALORS DE L'ESTADÍSTIC. 
# Cas balancejat: el RESULTATS SERIA EXACTAMENT el mateix FENT SERVIR l'estadístic t-student, o bé la diferencia de mitjes**, o bé, UNICAMENT EN EL CAS BALANCEJAT 
# la **SUMA DELS VALORS D'UN DELS GRUPS**, per exemple "D":


sums <- combn(auc, n1, sum)

#p-valor amb estadístic suma

suma.D <- sum(auc[1:n1])
sum(sums >= suma.D) / length(sums)



# Consideracions (3/3). Cas NO BALANCEJAT
# En un cas NO BALANCEJAT tindriem que emprar un **ESTADÍSTIC com la DIFERENCIA DE MITJES**. 

#Estadístic

diff.means <- function(indexs, vector.dades) {
  mean(vector.dades[indexs]) - mean(vector.dades[-indexs])
}

#Valor de l'estadístic en la mostra original

dmeansReal <- diff.means(1:n1, auc)

#Valor de l'estadístic en TOTES LES REMOSTRES

dmeansPerm <- vapply(cindexs, diff.means, vector.dades = auc, FUN.VALUE = 0.0)


#P-valor contrsta unilateral


sum(dmeansPerm >= dmeansReal) / length(dmeansPerm)


# Test bilateral: D != P ?

sum(abs(dmeansPerm) >= abs(dmeansReal)) / length(dmeansPerm)


#TEST PERMUTACIONS MÈTODE MONTECARLO

nperm <- 9999

# Diferencia de mitjanes dades originals

dmeansReal <- diff.means( 1:n1, auc)

# Diferencia de mitjanes SUBCONJUNT (9999) TOTES LES REMOSTRES

set.seed(1324)
dmeansPerm <- replicate(nperm, diff.means(sample(1:N, size = n1), auc))
dmeansPerm[1:10]

#P-VALOR 1: Un estimador no esbiaixat del p-valor seria la freqüència relativa:
Test unilateral: D > P ?

sum(dmeansPerm >= dmeansReal) / nperm

#P-VALOR 2: proposat per Dwass(1957), que és esbiaixat negativament però 
# assegura que es respectarà el nivell de significació nominal 

Test unilateral: D > P ?

(sum(dmeansPerm >= dmeansReal) + 1) / (nperm + 1)

# Test bilateral: D != P ?
(sum(abs(dmeansPerm) >= abs(dmeansReal)) + 1) / (nperm + 1)