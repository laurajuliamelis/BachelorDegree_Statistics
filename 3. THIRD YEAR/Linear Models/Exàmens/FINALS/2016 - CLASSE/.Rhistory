install.packages(c("akima", "ape", "BayesX", "BCA", "biclust", "car", "caret", "clinfun", "cmprsk", "colorspace", "conf.design", "cubature", "DAAG", "degreenet", "depthTools", "devtools", "DiceDesign", "dichromat", "digest", "distr", "distrEx", "DoE.base", "Ecdat", "effects", "epiR", "FactoMineR", "fAsianOptions", "fCopulae", "fImport", "flexmix", "forecast", "fpc", "FrF2", "gbm", "ggplot2", "gmp", "gRbase", "gWidgetstcltk", "hexbin", "HH", "igraph", "inline", "iplots", "isa2", "kernlab", "KernSmooth", "lattice", "lavaan", "maps", "maptools", "Matrix", "mboost", "meta", "metafor", "metatest", "minpack.lm", "misc3d", "miscTools", "missMDA", "mondate", "multcomp", "network", "nlme", "np", "pastecs", "PerformanceAnalytics", "plotrix", "pmml", "polspline", "pracma", "psych", "qgraph", "quantreg", "RandomFields", "rattle", "Rcmdr", "RcmdrPlugin.BCA", "RcmdrPlugin.depthTools", "RcmdrPlugin.DoE", "RcmdrPlugin.EZR", "RcmdrPlugin.HH", "RcmdrPlugin.KMggplot2", "RcmdrPlugin.MPAStats", "RcmdrPlug
in.orloca", "RcmdrPlugin.SCDA", "RcmdrPlugin.SLC", "RcmdrPlugin.StatisticalURV", "RcmdrPlugin.steepness", "RcmdrPlugin.survival", "RcmdrPlugin.TeachingDemos", "RcppArmadillo", "RcppEigen", "RCurl", "rgdal", "rgenoud", "rgeos", "rgl", "rJava", "robustbase", "rpanel", "rsm", "RWeka", "RWekajars", "SCVA", "sem", "seriation", "sgeostat", "shapefiles", "signal", "slam", "SLC", "sna", "sp", "spatstat", "startupmsg", "statmod", "sudoku", "survey", "survival", "SweaveListingUtils", "tcltk2", "TeachingDemos", "timeSeries", "tm", "WriteXLS", "XLConnect", "XML", "xtable", "xts", "Zelig"))
install.packages(c("acepack", "ade4", "AER", "agricolae", "akima", "animation", "ape", "aplpack", "arules", "arulesViz", "BayesX", "BCA", "bdsmatrix", "biclust", "biglm", "bitops", "BsMD", "Cairo", "car", "caret", "caTools", "cba", "chron", "clinfun", "clue", "cluster", "clv", "cmprsk", "coin", "colorspace", "CompQuadForm", "conf.design", "contrast", "corpcor", "crp.CSFP", "cubature", "DAAG", "DBI", "degreenet", "deldir", "depthTools", "descr", "deSolve", "devtools", "DiceDesign", "dichromat", "digest", "diptest", "distr", "distrEx", "doBy", "DoE.base", "DoE.wrapper", "dynlm", "e1071", "Ecdat", "effects", "ellipse", "ENmisc", "epiR", "ergm", "evaluate", "extrafont", "FactoMineR", "fArma", "fAsianOptions", "fAssets", "fBasics", "fCopulae", "fdrtool", "fExtremes", "fGarch", "fields", "fImport", "flexclust", "flexmix", "FME", "fNonlinear", "fOptions", "foreach", "forecast", "foreign", "Formula", "fortunes", "fpc", "fRegression", "FrF2", "fTrading", "fUnitRoots", "gam", "gamlss", "gamlss.
data", "gamlss.dist", "gbm", "gdata", "geoRglm", "ggplot2", "ggthemes", "gmodels", "gmp", "gRbase", "gregmisc", "gtools", "gWidgetsRGtk2", "gWidgetstcltk", "hergm", "hexbin", "HH", "Hmisc", "HSAUR", "igraph", "ineq", "inline", "iplots", "ipred", "isa2", "JGR", "jpeg", "kernlab", "KernSmooth", "kinship2", "labeling", "lattice", "latticeExtra", "lavaan", "lme4", "lmtest", "locfit", "logspline", "lokern", "lpSolve", "lpSolveAPI", "mapproj", "maps", "maptools", "Matrix", "maxLik", "mboost", "mclust", "MCMCpack", "MEMSS", "meta", "metafor", "metatest", "mgcv", "mice", "minpack.lm", "misc3d", "miscTools", "missMDA", "mlmRev", "mlogit", "mnormt", "modeltools", "mondate", "MPV", "multcomp", "munsell", "mvtnorm", "network", "networkDynamic", "networksis", "nlme", "nnet", "nor1mix", "np", "optmatch", "ordinal", "oz", "party", "pastecs", "PBSmapping", "pcalg", "PerformanceAnalytics", "plm", "plotrix", "pmml", "png", "polspline", "pracma", "pROC", "prodlim", "proxy", "psych", "qgraph", "quadprog"
, "quantreg", "R2HTML", "RandomFields", "randtoolbox", "RANN", "rattle", "Rcmdr", "RcmdrPlugin.BCA", "RcmdrPlugin.depthTools", "RcmdrPlugin.doBy", "RcmdrPlugin.DoE", "RcmdrPlugin.EACSPIR", "RcmdrPlugin.EBM", "RcmdrPlugin.EZR", "RcmdrPlugin.HH", "RcmdrPlugin.KMggplot2", "RcmdrPlugin.MPAStats", "RcmdrPlugin.orloca", "RcmdrPlugin.SLC", "RcmdrPlugin.StatisticalURV", "RcmdrPlugin.survival", "RcmdrPlugin.TeachingDemos", "RcmdrPlugin.UCA", "Rcpp", "RcppArmadillo", "RcppEigen", "Rcsdp", "RCurl", "ref", "relations", "relax", "relevent", "rgdal", "rgenoud", "rgeos", "rgl", "Rglpk", "RgoogleMaps", "rJava", "rjson", "Rmpfr", "rms", "rngWELL", "robustbase", "ROCR", "RODBC", "rootSolve", "rpanel", "rpart", "Rserve", "rsm", "RSQLite", "Rsymphony", "Rttf2pt1", "RWeka", "RWekajars", "sampling", "sandwich", "scatterplot3d", "SCMA", "SCRT", "SCVA", "sem", "SensoMineR", "seriation", "sets", "sfsmisc", "sgeostat", "shapefiles", "shapes", "signal", "simecol", "slam", "SLC", "sm", "sna", "snow", "Snowball",
"sos", "sp", "spam", "SparseM", "spatstat", "spdep", "splancs", "stabledist", "startupmsg", "statmod", "strucchange", "subselect", "sudoku", "survey", "survival", "SweaveListingUtils", "tcltk2", "TeachingDemos", "testthat", "tikzDevice", "timeDate", "timeSeries", "tm", "tree", "tripack", "truncreg", "trust", "tseries", "TSP", "tuneR", "urca", "vcd", "verification", "VGAM", "VIM", "waveslim", "whisker", "WriteXLS", "XLConnect", "XML", "xtable", "xts", "Zelig", "zoo"))
install.packages(c("class", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial"))
q()
install.packages("shinyBS")
install.packages("swamp")
library()
install.packages("SWSamp",
repos=c("http://www.statistica.it/gianluca/R",
"https://cran.rstudio.org",
"https://www.math.ntnu.no/inla/R/stable"),
dependencies=TRUE
)
install.packages("SWSamp",
repos=c("http://www.statistica.it/gianluca/R",
"https://cran.rstudio.org",
"https://www.math.ntnu.no/inla/R/stable"),
dependencies=TRUE
)
update.packages(ask='graphics',checkBuilt=TRUE)
q()
update()
upgrade()
q()
setwd("C:/Users/marta.pinol/Downloads")
knitr::opts_chunk$set(echo = TRUE)
dades <- read.table(bloodpress_A.txt, header=T)
setwd("C:/Users/marta.pinol/Downloads")
dades <- read.table(bloodpress_A, header=T)
dades <- read.table(bloodpress_A, header=T)
dades <- read.txt(bloodpress_A, header=T)
dades <- read.table(bloodpress_A, header=T)
?read.table
setwd("E:/ModLineals/2nparcial2016")
dades <- read.table(bloodpress_A, header=T)
dades <- read.table("bloodpress_A", header=T)
dades <- read.table("bloodpress_A.txt", header=T)
head(view)
head(dades)
library(faraway)
#funcio per calcular els vips en faraway
#hi ha tres valors superiors a 4, per tant, podem afirmar que hi ha multicolinealitat
install.packages("faraway")
install.packages("faraway")
knitr::opts_chunk$set(echo = TRUE)
dades <- read.table("bloodpress_A.txt", header=T)
dades <- dades[,-1]
head(dades)
g <- lm(BP ~ Age+Weight+BSA+Dur+Pulse+Stress, dades)
library(MASS)
gridge <- lm.ridge(BP ~ Age+Weight+BSA+Dur+Pulse+Stress, data=dades, lambda = seq(0,10,0.1))
matplot(gridge$lambda, t(gridge$coef), type="l", lty=1, xlab=expression(lambda), ylab=expression(hat(beta)))
select(gridge)
library(MASS)
gridge <- lm.ridge(BP ~ Age+Weight+BSA+Dur+Pulse+Stress, data=dades, lambda = seq(0,3,0.1))
matplot(gridge$lambda, t(gridge$coef), type="l", lty=1, xlab=expression(lambda), ylab=expression(hat(beta)))
select(gridge)
#l'objectiu és troba el gcv
#secuencia que va de 0 a 3 de 0.1. El minim que em surt de gcv es 0.03
# fixem lamda en 0.03 i obtenim els coeficients, pero pot ser que doni algo diferent
library(MASS)
gridge <- lm.ridge(BP ~ Age+Weight+BSA+Dur+Pulse+Stress, dades, lambda = seq(0,3,0.01))
matplot(gridge$lambda, t(gridge$coef), type="l", lty=1, xlab=expression(lambda), ylab=expression(hat(beta)))
select(gridge)
#l'objectiu és troba el gcv
#secuencia que va de 0 a 3 de 0.1. El minim que em surt de gcv es 0.03
# fixem lamda en 0.03 i obtenim els coeficients, pero pot ser que doni algo diferent
library(MASS)
gridge <- lm.ridge(BP ~ Age+Weight+BSA+Dur+Pulse+Stress, dades, lambda = seq(0,3,0.01))
matplot(gridge$lambda, t(gridge$coef), type="l", lty=1, xlab=expression(lambda), ylab=expression(hat(beta)))
abline(v=0.03)
select(gridge)
#l'objectiu és troba el gcv
#secuencia que va de 0 a 3 de 0.1. El minim que em surt de gcv es 0.03
# fixem lamda en 0.03 i obtenim els coeficients, pero pot ser que doni algo diferent
library(MASS)
gridge <- lm.ridge(BP ~ Age+Weight+BSA+Dur+Pulse+Stress, dades, lambda = seq(0,3,0.01))
matplot(gridge$lambda, coef(gridge), type="l", lty=1, xlab=expression(lambda), ylab=expression(hat(beta)))
abline(v=0.03)
select(gridge)
#l'objectiu és troba el gcv
#secuencia que va de 0 a 3 de 0.1. El minim que em surt de gcv es 0.03
# fixem lamda en 0.03 i obtenim els coeficients, pero pot ser que doni algo diferent
y <- c(yA, yB, yC)
