install.packages(c("akima", "ape", "BayesX", "BCA", "biclust", "car", "caret", "clinfun", "cmprsk", "colorspace", "conf.design", "cubature", "DAAG", "degreenet", "depthTools", "devtools", "DiceDesign", "dichromat", "digest", "distr", "distrEx", "DoE.base", "Ecdat", "effects", "epiR", "FactoMineR", "fAsianOptions", "fCopulae", "fImport", "flexmix", "forecast", "fpc", "FrF2", "gbm", "ggplot2", "gmp", "gRbase", "gWidgetstcltk", "hexbin", "HH", "igraph", "inline", "iplots", "isa2", "kernlab", "KernSmooth", "lattice", "lavaan", "maps", "maptools", "Matrix", "mboost", "meta", "metafor", "metatest", "minpack.lm", "misc3d", "miscTools", "missMDA", "mondate", "multcomp", "network", "nlme", "np", "pastecs", "PerformanceAnalytics", "plotrix", "pmml", "polspline", "pracma", "psych", "qgraph", "quantreg", "RandomFields", "rattle", "Rcmdr", "RcmdrPlugin.BCA", "RcmdrPlugin.depthTools", "RcmdrPlugin.DoE", "RcmdrPlugin.EZR", "RcmdrPlugin.HH", "RcmdrPlugin.KMggplot2", "RcmdrPlugin.MPAStats", "RcmdrPlug
in.orloca", "RcmdrPlugin.SCDA", "RcmdrPlugin.SLC", "RcmdrPlugin.StatisticalURV", "RcmdrPlugin.steepness", "RcmdrPlugin.survival", "RcmdrPlugin.TeachingDemos", "RcppArmadillo", "RcppEigen", "RCurl", "rgdal", "rgenoud", "rgeos", "rgl", "rJava", "robustbase", "rpanel", "rsm", "RWeka", "RWekajars", "SCVA", "sem", "seriation", "sgeostat", "shapefiles", "signal", "slam", "SLC", "sna", "sp", "spatstat", "startupmsg", "statmod", "sudoku", "survey", "survival", "SweaveListingUtils", "tcltk2", "TeachingDemos", "timeSeries", "tm", "WriteXLS", "XLConnect", "XML", "xtable", "xts", "Zelig"))
install.packages(c("acepack", "ade4", "AER", "agricolae", "akima", "animation", "ape", "aplpack", "arules", "arulesViz", "BayesX", "BCA", "bdsmatrix", "biclust", "biglm", "bitops", "BsMD", "Cairo", "car", "caret", "caTools", "cba", "chron", "clinfun", "clue", "cluster", "clv", "cmprsk", "coin", "colorspace", "CompQuadForm", "conf.design", "contrast", "corpcor", "crp.CSFP", "cubature", "DAAG", "DBI", "degreenet", "deldir", "depthTools", "descr", "deSolve", "devtools", "DiceDesign", "dichromat", "digest", "diptest", "distr", "distrEx", "doBy", "DoE.base", "DoE.wrapper", "dynlm", "e1071", "Ecdat", "effects", "ellipse", "ENmisc", "epiR", "ergm", "evaluate", "extrafont", "FactoMineR", "fArma", "fAsianOptions", "fAssets", "fBasics", "fCopulae", "fdrtool", "fExtremes", "fGarch", "fields", "fImport", "flexclust", "flexmix", "FME", "fNonlinear", "fOptions", "foreach", "forecast", "foreign", "Formula", "fortunes", "fpc", "fRegression", "FrF2", "fTrading", "fUnitRoots", "gam", "gamlss", "gamlss.
data", "gamlss.dist", "gbm", "gdata", "geoRglm", "ggplot2", "ggthemes", "gmodels", "gmp", "gRbase", "gregmisc", "gtools", "gWidgetsRGtk2", "gWidgetstcltk", "hergm", "hexbin", "HH", "Hmisc", "HSAUR", "igraph", "ineq", "inline", "iplots", "ipred", "isa2", "JGR", "jpeg", "kernlab", "KernSmooth", "kinship2", "labeling", "lattice", "latticeExtra", "lavaan", "lme4", "lmtest", "locfit", "logspline", "lokern", "lpSolve", "lpSolveAPI", "mapproj", "maps", "maptools", "Matrix", "maxLik", "mboost", "mclust", "MCMCpack", "MEMSS", "meta", "metafor", "metatest", "mgcv", "mice", "minpack.lm", "misc3d", "miscTools", "missMDA", "mlmRev", "mlogit", "mnormt", "modeltools", "mondate", "MPV", "multcomp", "munsell", "mvtnorm", "network", "networkDynamic", "networksis", "nlme", "nnet", "nor1mix", "np", "optmatch", "ordinal", "oz", "party", "pastecs", "PBSmapping", "pcalg", "PerformanceAnalytics", "plm", "plotrix", "pmml", "png", "polspline", "pracma", "pROC", "prodlim", "proxy", "psych", "qgraph", "quadprog"
, "quantreg", "R2HTML", "RandomFields", "randtoolbox", "RANN", "rattle", "Rcmdr", "RcmdrPlugin.BCA", "RcmdrPlugin.depthTools", "RcmdrPlugin.doBy", "RcmdrPlugin.DoE", "RcmdrPlugin.EACSPIR", "RcmdrPlugin.EBM", "RcmdrPlugin.EZR", "RcmdrPlugin.HH", "RcmdrPlugin.KMggplot2", "RcmdrPlugin.MPAStats", "RcmdrPlugin.orloca", "RcmdrPlugin.SLC", "RcmdrPlugin.StatisticalURV", "RcmdrPlugin.survival", "RcmdrPlugin.TeachingDemos", "RcmdrPlugin.UCA", "Rcpp", "RcppArmadillo", "RcppEigen", "Rcsdp", "RCurl", "ref", "relations", "relax", "relevent", "rgdal", "rgenoud", "rgeos", "rgl", "Rglpk", "RgoogleMaps", "rJava", "rjson", "Rmpfr", "rms", "rngWELL", "robustbase", "ROCR", "RODBC", "rootSolve", "rpanel", "rpart", "Rserve", "rsm", "RSQLite", "Rsymphony", "Rttf2pt1", "RWeka", "RWekajars", "sampling", "sandwich", "scatterplot3d", "SCMA", "SCRT", "SCVA", "sem", "SensoMineR", "seriation", "sets", "sfsmisc", "sgeostat", "shapefiles", "shapes", "signal", "simecol", "slam", "SLC", "sm", "sna", "snow", "Snowball",
"sos", "sp", "spam", "SparseM", "spatstat", "spdep", "splancs", "stabledist", "startupmsg", "statmod", "strucchange", "subselect", "sudoku", "survey", "survival", "SweaveListingUtils", "tcltk2", "TeachingDemos", "testthat", "tikzDevice", "timeDate", "timeSeries", "tm", "tree", "tripack", "truncreg", "trust", "tseries", "TSP", "tuneR", "urca", "vcd", "verification", "VGAM", "VIM", "waveslim", "whisker", "WriteXLS", "XLConnect", "XML", "xtable", "xts", "Zelig", "zoo"))
install.packages(c("class", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial"))
q()
install.packages("shinyBS")
install.packages("swamp")
library()
install.packages("SWSamp",
repos=c("http://www.statistica.it/gianluca/R",
"https://cran.rstudio.org",
"https://www.math.ntnu.no/inla/R/stable"),
dependencies=TRUE
)
install.packages("SWSamp",
repos=c("http://www.statistica.it/gianluca/R",
"https://cran.rstudio.org",
"https://www.math.ntnu.no/inla/R/stable"),
dependencies=TRUE
)
update.packages(ask='graphics',checkBuilt=TRUE)
q()
update()
upgrade()
q()
install.packages("multcompView")
install.packages(c("backports", "car", "checkmate", "data.table", "digest", "Hmisc", "hms", "htmlTable", "knitr", "lazyeval", "lme4", "lsmeans", "MASS", "Matrix", "mgcv", "multcomp", "quantreg", "RcmdrMisc", "Rcpp", "RcppEigen", "reshape2", "rlang", "stringi", "tables", "tibble", "viridis", "yaml", "zoo"))
install.packages(c("digest", "haven", "mgcv", "pillar", "rpart"))
library(vegan)
library(xlsx)
library(knitr)
data <- read.xlsx("BreenOakwood.xlsx",sheetIndex=1, header=T)
setwd("E:/BIOCIÃˆNCIES/Entregues/BLOC2")
data <- read.xlsx("BreenOakwood.xlsx",sheetIndex=1, header=T)
N_especies <- nrow(data)
N_especies
N_plantas <- sum(data[,2])
N_plantas
Promedio <- N_plantas/N_especies
round(Promedio,2)
Abun_relativa <- round(data$Abundance/N_plantas,4)
kable(data.frame(data$Species, Abun_relativa))
N <- N_plantas
N
S <- N_especies
S
index <- sort(data$Abundance, decreasing=TRUE)
rel.abundance.sorted <- index/N
speciesrank <- 1:S
plot(speciesrank,rel.abundance.sorted,type="b") # in a relative scale
plot(speciesrank,log(rel.abundance.sorted),type="b") # in the log scale
View(data)
fisher.alpha(N)
fisherfit(N)
y <- rep(data[,1], data[,2])
y
fisher.alpha(y)
data$indice <- rownames(data)
y <- rep(data[,3], data[,2])
y
fisher.alpha(y)
fisher.alpha(y)
fisherfit(y)
data$indice <-as.numeric(rownames(data))
y <- rep(data[,3], data[,2])
fisher.alpha(y)
fisherfit(y)
N
fisher.alpha(N)
fisherfit(N)
fisher.alpha(data[,1])
fisher.alpha(data[,2])
fisherfit(data[,2])
plot(speciesrank,rel.abundance.sorted,type="b") # in a relative scale
plot(speciesrank,log(rel.abundance.sorted),type="b") # in the log scale
fisher.alpha(data[,2])
fisherfit(data[,2])
p <- 1-exp(-S/fisher.alpha(data[,2]))
p
x<- 1:N_especies
log(data[,2])
lny<- log(data[,2])
summary(lny)
regresion <- lm(lny)
regresion <- lm(lny~x)
summary(regresion)
piechart(data)
pie(data)
pie(data[,2])
lbls <- data[,1]
pie(data[,2], labels=lbls)
pie(data[,2])
S
lny
lny<- log(sort(data[,2]))
regresion <- lm(lny~x)
summary(regresion)
pie(sort(data[,2])
pie(sort(data[,2]))
pie(sort(data[,2]))
pie(sort(data[,2], decreasing=T))
pie(sort(data[,2], decreasing=T), labels = NULL)
pie(sort(data[,2], decreasing=T), labels = NA)
pie(sort(data[,2], decreasing=T))
pie(sort(data[,2], decreasing=T), labels = NA)
regresion
plot(lny)
pie(sort(data[,2], decreasing=T), labels = NA, main = 'Niche space')
plot(lny)
plot(lny, x)
plot(lny, x, main= 'Regresion line graphic')
plot(lny, x, main= 'Regresion graphic')
lny<- log(sort(data[,2]))
regresion <- lm(lny~x)
summary(regresion)
par(mfrow=c(2,2))
pie(sort(data[,2], decreasing=T), labels = NA, main = 'Niche space')
plot(lny, x, main= 'Regresion graphic')
abline(lny)
lny<- log(sort(data[,2]))
regresion <- lm(lny~x)
summary(regresion)
par(mfrow=c(2,2))
pie(sort(data[,2], decreasing=T), labels = NA, main = 'Niche space')
plot(lny, x, main= 'Regresion graphic')
abline(regresion)
x<- 1:N_especies
plot(lny, x, main= 'Regresion graphic')
abline(regresion)
plot(lny, x, main= 'Regresion graphic')
abline(regresion)
lny<- log(sort(data[,2], decreasing = T))
regresion <- lm(lny~x)
summary(regresion)
plot(lny, x, main= 'Regresion graphic')
plot(lny, x, main= 'Regresion graphic')
abline(regresion)
plot(regresion, x, main= 'Regresion graphic')
plot(regresion,main= 'Regresion graphic')
plot.lm(regresion,main= 'Regresion graphic')
plot(lny, x, main= 'Regresion graphic')
summary(regresion)
regresion
abline(4.8101,-0.1445 )
plot(lny, x, main= 'Regresion graphic')
abline(4.8101,-0.1445)
lny<- log(sort(data[,2], decreasing =T ))
regresion <- lm(lny~x)
summary(regresion)
par(mfrow=c(2,2))
pie(sort(data[,2], decreasing=T), labels = NA, main = 'Niche space')
plot(lny, x, main= 'Regresion graphic')
abline(regresion)
plot(x,lny, main= 'Regresion graphic')
abline(regresion)
plot(x,lny, main= 'Regresion graphic')
abline(regresion)
summary(regresion)
plot(speciesrank,log(rel.abundance.sorted),type="b") # in the log scale
abline(regresion)
plot(speciesrank,log(rel.abundance.sorted),type="b") # in the log scale
abline(regresion)
speciesrank
log(rel.abundance.sorted)
lny
plot(x,lny, main= 'Regresion graphic')
abline(lm(rel.abundance.sorted~speciesrank))
plot(speciesrank,log(rel.abundance.sorted),type="b") # in the log scale
abline(lm(rel.abundance.sorted~speciesrank))
plot(speciesrank,log(rel.abundance.sorted),type="b") # in the log scale
abline(lm(log(rel.abundance.sorted)~speciesrank))
summary(regresion)
regresion$coefficients
regresion_rel <- lm(log(rel.abundance.sorted)~speciesrank)
regresion_rel <- lm(log(rel.abundance.sorted)~speciesrank)
plot(speciesrank,log(rel.abundance.sorted),type="b") # in the log scale
abline(regresion_rel)
summary(regresion_rel)
k <- 1-exp(-0.144458)
regresion_rel$coefficients
regresion_rel$coefficients[2]
k <- 1-exp(regresion_rel$coefficients[2])
k
summary(regresion_rel)
summary(regresion_rel)$residuals
summary(regresion_rel$residuas)
summary(regresion_rel$residuals)
plot(regresion_rel)
plot(regresion_rel, which=1)
summary(regresion_rel$residuals)
plot(regresion_rel, which=1)
confint(regresion_rel)
confint(k)
k <- 1-exp(regresion_rel$coefficients[2])
k
k <- 1-log(regresion_rel$coefficients[2])
k <- 1-log(exp(regresion_rel$coefficients[2]))
k
k <- 1-log(-0.1444583)
out <- rad.null(data$Abundance)
yhat <- fitted(out)
plot(out)
shannon(data)
install.packages("entropart")
library(entropart)
shannon(data$Abundance)
