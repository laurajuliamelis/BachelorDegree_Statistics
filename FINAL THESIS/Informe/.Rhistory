### 5.2.1.Con n=100 copias.
logbinonial8.copy100 <- copy(dppdat,'epds8wc', vars = c('epqnT','epds0','duke','antpers'),100)
### 5.2.2.Con n=1000 copias.
logbinonial8.copy1000 <- copy(dppdat,'epds8wc', vars = c('epqnT','epds0','duke','antpers'),1000)
#### 5.2.3.Con n=10000 copias.
logbinonial8.copy10000 <- copy(dppdat,'epds8wc', vars = c('epqnT','epds0','duke','antpers'),10000)
## 5.3. Síntomas de depresión a las 32 semanas (EPDS>9).
### 5.3.1.Con n=100 copias.
logbinonial32.copy100 <- copy(dppdat,'epds32winc', vars = c('epqnT','epds0','ecoprob'),100)
### 5.3.2.Con n=1000 copias.
logbinonial32.copy1000 <- copy(dppdat,'epds32winc', vars = c('epqnT','epds0','ecoprob'),1000)
#### 5.3.3.Con n=10000 copias.
logbinonial32.copy10000 <- copy(dppdat,'epds32winc', vars = c('epqnT','epds0','ecoprob'),10000)
## 3.3. Diagnóstico clínico de la depresión postparto (DIGS).
logbinomialDIGS <- glm(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, family=binomial(link="log"))
summary(logbinomialDIGS)
##### 3.3.1 Con argumento start.
# Valores -4 i 0
logbinomialDIGS.start1 <- glm(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, family=binomial(link="log"), start=c(-4, rep(0,5)))
warnings()
summary(logbinomialDIGS.start1)
exp(coef(logbinomialDIGS.start1))[-1]
## 4.3. Diagnóstico clínico de la depresión postparto (DIGS).
logbinDIGS <- logbin(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat)
## 5.4. Diagnóstico clínico de la depresión postparto (DIGS).
### 5.4.1.Con n=100 copias.
logbinonialDIGS.copy100 <- copy(dppdat,'digs0a32', vars = c('epqnT','epds0','antpers','antpsifa','expvit'),100)
### 5.4.2.Con n=1000 copias.
logbinonialDIGS.copy1000 <- copy(dppdat,'digs0a32', vars = c('epqnT','epds0','antpers','antpsifa','expvit'),1000)
#### 5.4.3.Con n=10000 copias.
logbinonialDIGS.copy10000 <- copy(dppdat,'digs0a32', vars = c('epqnT','epds0','antpers','antpsifa','expvit'),10000)
warnings()
## 5.4. Diagnóstico clínico de la depresión postparto (DIGS).
### 5.4.1.Con n=100 copias.
logbinonialDIGS.copy100 <- copy(dppdat,'digs0a32', vars = c('epqnT','epds0','antpers','antpsifa','expvit'),100)
warnings()
### 5.4.2.Con n=1000 copias.
logbinonialDIGS.copy1000 <- copy(dppdat,'digs0a32', vars = c('epqnT','epds0','antpers','antpsifa','expvit'),1000)
warnings()
summary(logbinonialDIGS.copy100)
summary(logbinonialDIGS.copy1000)
summary(logbinonialDIGS.copy10000)
exp(coef(logbinonialDIGS.copy10000))[-1]
# 1. LECTURA DE DATOS.
load("DPP.RData")
#install.packages("logbin")
library(logbin)
## 4.2. Síntomas de depresión a las 32 semanas (EPDS>9).
logbin32 <- logbin(epds32winc~epqnT+epds0+ecoprob, data=dppdat)
summary(logbin32)
## 4.3. Diagnóstico clínico de la depresión postparto (DIGS).
logbinDIGS <- logbin(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat)
summary(logbinDIGS)
##### 4.3.1 Con argumento bound.tol.
logbinDIGS <- logbin(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, bound.tol= 0.05)
summary(logbinDIGS.bound)
##### 4.3.1 Con argumento bound.tol.
logbinDIGS.bound <- logbin(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, bound.tol= 0.05)
summary(logbinDIGS.bound)
##### 4.3.1 Con argumento bound.tol.
logbinDIGS.bound <- logbin(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, maxit=100000, bound.tol= 0.05)
summary(logbinDIGS.bound)
##### 4.3.1 Con argumento bound.tol.
logbinDIGS.bound <- logbin(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, maxit=1000000, bound.tol= 0.05)
summary(logbinDIGS.bound)
##### 4.3.1 Con argumento bound.tol.
logbinDIGS.bound <- logbin(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, maxit=1000, bound.tol= 0.05)
summary(logbinDIGS.bound)
##### 4.3.1 Con argumento bound.tol.
logbinDIGS.bound <- logbin(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, maxit=100, bound.tol= 0.05)
summary(logbinDIGS.bound)
# -------- 4. MODELOS DE REGRESIÓN LOG-BINOMIAL CON FUNCIÓN LOGBIN. -------- #
### 4.1. Síntomas de depresión a las 8 semanas (EPDS>9).
logbin8 <- logbin(epds8wc~epqnT+epds0+duke+antpers, data=dppdat)
summary(logbin8)
###### Valores de la función logbin
logbinonial8.start2 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat, family=binomial(link="log"), start=c(-3.905,0.03624,0.03717,7.772e-16,0.2553))
warnings()
summary(logbinonial8.start2)
##### 3.1.1 Con argumento "start".
###### Valores -4 i 0
logbinonial8.start1 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat, family=binomial(link="log"), start=c(-4, rep(0,4)))
summary(logbinonial8.start1)
# -------- 2. MODELOS DE REGRESIÓN LOGÍSTICA. -------- #
### 2.1. Síntomas de depresión a las 8 semanas (EPDS>9).
logistica8 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat,family=binomial(link="logit"))
summary(logistica8)
HosmerLemeshow(logistica8)
hoslem.test(logistica8)
install.packages("ResourceSelection")
#install.packages("ResourceSelection")
library(ResourceSelection)
hoslem.test(logistica8)
hoslem.test(logistica8$y, fitted(logistica8), g=10)
# -------- 2. MODELOS DE REGRESIÓN LOGÍSTICA. -------- #
### 2.1. Síntomas de depresión a las 8 semanas (EPDS>9).
logistica8 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat,family=binomial(link="logit"))
summary(logistica8)
hoslem.test(logistica8$y, fitted(logistica8), g=10)
### 2.2. Síntomas de depresión a las 32 semanas (EPDS>9).
logistica32 <- glm(epds32winc~epqnT+epds0+ecoprob, data=dppdat,family=binomial(link="logit"))
### 2.3. Diagnóstico clínico de la depresión postparto (DIGS).
logisticaDIGS <- glm(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat,family=binomial(link="logit"))
# -------- 6. PRUEBAS DE BONDAD DE AJUSTE. -------- #
### 6.1. Modelos de regresión logística.
hoslem.test(logistica8$y, fitted(logistica8), g=10)
hoslem.test(logistica32$y, fitted(logistica8), g=10)
hoslem.test(logisticaDIGS$y, fitted(logistica8), g=10)
# -------- 6. PRUEBAS DE BONDAD DE AJUSTE. -------- #
### 6.1. Modelos de regresión logística.
hoslem.test(logistica8$y, fitted(logistica8), g=10)
hoslem.test(logistica32$y, fitted(logistica32), g=10)
hoslem.test(logisticaDIGS$y, fitted(logisticaDIGS), g=10)
##### 3.1.1 Con argumento "start".
###### Valores -4 i 0
logbinonial8.start1 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat, family=binomial(link="log"), start=c(-4, rep(0,4)))
### 3.2. Síntomas de depresión a las 32 semanas (EPDS>9).
logbinomial32 <- glm(epds32winc~epqnT+epds0+ecoprob, data=dppdat, family=binomial(link="log"))
##### 3.3.1 Con argumento start.
###### Valores -4 i 0
logbinomialDIGS.start1 <- glm(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, family=binomial(link="log"), start=c(-4, rep(0,5)))
### 6.2. Modelos de regresión log-binomial.
###### 6.2.1.Con función "glm".
hoslem.test(logbinonial8.start1$y, fitted(logbinonial8.start1), g=10)
hoslem.test(logbinonial32$y, fitted(logbinomial32), g=10)
hoslem.test(logbinomial32$y, fitted(logbinomial32), g=10)
hoslem.test(logbinonialDIGS.start1$y, fitted(logbinonialDIGS.start1), g=10)
hoslem.test(logbinomialDIGS.start1$y, fitted(logbinomialDIGS.start1), g=10)
###### 6.2.1.Con función "logbin".
hoslem.test(logbin8$y, fitted(logbin8), g=10)
hoslem.test(logbin32$y, fitted(logbin32), g=10)
hoslem.test(logbinDIGS$y, fitted(logbinDIGS), g=10)
### 5.2. Síntomas de depresión a las 8 semanas (EPDS>9).
##### 5.2.1.Con n=100 copias.
logbinonial8.copy100 <- copy(dppdat,'epds8wc', vars = c('epqnT','epds0','duke','antpers'),100)
copy <- function(data, Y, vars,n, W) {
if (!is.numeric(data[, Y])) {
data[, Y] <- as.numeric(data[, Y])-1
}
data$W <- (n-1)/n
data.copy <- data
data.copy[, Y] <- 1-data.copy[, Y]
data.copy$W <- 1/n
data.all <- merge(data, data.copy, all = T)
formul <- paste(Y, paste(vars, collapse = " + "), sep = "~")
mod.mat <- model.matrix(as.formula(formul), data)
glm.copy <- glm(as.formula(formul), family = binomial(log), data.all,
weights = W, control = list(maxit = 100),
start = c(-4, rep(0, ncol(mod.mat)-1)))
return(glm.copy)
}
### 5.2. Síntomas de depresión a las 8 semanas (EPDS>9).
##### 5.2.1.Con n=100 copias.
logbinonial8.copy100 <- copy(dppdat,'epds8wc', vars = c('epqnT','epds0','duke','antpers'),100)
##### 5.2.2.Con n=1000 copias.
logbinonial8.copy1000 <- copy(dppdat,'epds8wc', vars = c('epqnT','epds0','duke','antpers'),1000)
##### 5.2.3.Con n=10000 copias.
logbinonial8.copy10000 <- copy(dppdat,'epds8wc', vars = c('epqnT','epds0','duke','antpers'),10000)
### 5.3. Síntomas de depresión a las 32 semanas (EPDS>9).
##### 5.3.1.Con n=100 copias.
logbinonial32.copy100 <- copy(dppdat,'epds32winc', vars = c('epqnT','epds0','ecoprob'),100)
##### 5.3.2.Con n=1000 copias.
logbinonial32.copy1000 <- copy(dppdat,'epds32winc', vars = c('epqnT','epds0','ecoprob'),1000)
###### 5.3.3.Con n=10000 copias.
logbinonial32.copy10000 <- copy(dppdat,'epds32winc', vars = c('epqnT','epds0','ecoprob'),10000)
### 5.4. Diagnóstico clínico de la depresión postparto (DIGS).
##### 5.4.1.Con n=100 copias.
logbinonialDIGS.copy100 <- copy(dppdat,'digs0a32', vars = c('epqnT','epds0','antpers','antpsifa','expvit'),100)
##### 5.4.2.Con n=1000 copias.
logbinonialDIGS.copy1000 <- copy(dppdat,'digs0a32', vars = c('epqnT','epds0','antpers','antpsifa','expvit'),1000)
###### 5.4.3.Con n=10000 copias.
logbinonialDIGS.copy10000 <- copy(dppdat,'digs0a32', vars = c('epqnT','epds0','antpers','antpsifa','expvit'),10000)
###### 6.2.1.Con función "COPY".
hoslem.test(logbinonial8.copy100$y, fitted(logbinonial8.copy100), g=10)
hoslem.test(logbinonial8.copy1000$y, fitted(logbinonial8.copy1000), g=10)
hoslem.test(logbinonial8.copy10000$y, fitted(logbinonial8.copy10000), g=10)
hoslem.test(logbinonial32.copy100$y, fitted(logbinonial32.copy100), g=10)
hoslem.test(logbinonial32.copy1000$y, fitted(logbinonial32.copy1000), g=10)
hoslem.test(logbinonial32.copy10000$y, fitted(logbinonial32.copy10000), g=10)
hoslem.test(logbinonialDIGS.copy100$y, fitted(logbinonialDIGS.copy100), g=10)
hoslem.test(logbinonialDIGS.copy1000$y, fitted(logbinonialDIGS.copy1000), g=10)
# -------- 6. PRUEBAS DE BONDAD DE AJUSTE. -------- #
### 6.1. Modelos de regresión logística.
hoslem.test(logistica8$y, fitted(logistica8), g=10)
# -------- 6. PRUEBAS DE BONDAD DE AJUSTE. -------- #
### 6.1. Modelos de regresión logística.
h1 <-hoslem.test(logistica8$y, fitted(logistica8), g=10)
cbind(h1$observed,h1$expected)
sum(h1$observed)
sum(h1$expected)
### 6.2. Modelos de regresión log-binomial.
###### 6.2.1.Con función "glm".
hoslem.test(logbinonial8.start1$y, fitted(logbinonial8.start1), g=10)
### 6.2. Modelos de regresión log-binomial.
###### 6.2.1.Con función "glm".
h2 <- hoslem.test(logbinonial8.start1$y, fitted(logbinonial8.start1), g=10)
cbind(h2$observed,h2$expected)
sum(h2$observed)
sum(h2$expected)
citation(hoslem.test)
citation("hoslem.test")
#install.packages("ResourceSelection")
library(ResourceSelection)
citation("hoslem.test")
citation(hoslem.test)
citation(glm)
citation("glm")
citation("logbin")
citation("ResourceSelection")
#install.packages("logbin")
library(logbin)
# -------- 1. LECTURA DE DATOS. -------- #
load("DPP.RData")
###### Valores de la función logbin
logbinonial8.start2 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat, family=binomial(link="log"), start=c(-3.905,0.03624,0.03717,7.772e-16,0.2553))
summary(logbinonial8.start2)
##### 3.1.1 Con argumento "start".
###### Valores -4 i 0
logbinonial8.start1 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat, family=binomial(link="log"), start=c(-4, rep(0,4)))
summary(logbinonial8.start1)
### 6.2. Modelos de regresión log-binomial.
###### 6.2.1.Con función "glm".
hoslem.test(logbinonial8.start1$y, fitted(logbinonial8.start1), g=10)
### 6.2. Modelos de regresión log-binomial.
###### 6.2.1.Con función "glm".
hoslem.test(logbinonial8.start2$y, fitted(logbinonial8.start2), g=10)
# -------- 2. MODELOS DE REGRESIÓN LOGÍSTICA. -------- #
### 2.1. Síntomas de depresión a las 8 semanas (EPDS>9).
logistica8 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat,family=binomial(link="logit"))
sum(resid(logistica8,'deviance')^2) # D_m: option 1
logistica8$deviance # D_m: option 2
summary(logistica8)
logistica8$deviance
rbind("Estadistico de la devianza" = logistica8$deviance , "Grados de libertad" = logistica8$df.residual)
summary(logistica8)
1804-397
1804-397-5
pvalor <- 1-pchisq(logistica8$deviance, 1402)
pvalor
pvalor <- pchisq(logistica8$deviance, 1402)
pvalor
pvalor <- pchisq(logistica8$deviance, 1402,lower.tail = TRUE)
pvalor
pvalor <- 1-pchisq(logistica8$deviance, 1402,lower.tail = TRUE)
pvalor
##### 3.1.1 Con argumento "start".
###### Valores -4 i 0
logbinonial8.start1 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat, family=binomial(link="log"), start=c(-4, rep(0,4)))
summary(logbinonial8.start1)
rbind("Estadistico de la devianza" = logbinonial8.start1$deviance , "Grados de libertad" = logbinonial8.start1$df.residual)
pvalor <- 1-pchisq(logbinonial8.start1$deviance, 1402,lower.tail = TRUE)
pvalor
ChiT<-qchisq(0.95, 1402)
ChiT
logbinonial8.start1$deviance
pvalor <- 1-pchisq(logbinonial8.start1$deviance, 1402,lower.tail = FALSE)
pvalor
pvalor <- pchisq(logbinonial8.start1$deviance, 1402,lower.tail = FALSE)
pvalor
pvalor <- pchisq(logbinonial8.start1$deviance, 1402)
pvalor
pvalor <- 1-pchisq(logbinonial8.start1$deviance, 1402)
pvalor
rbind("Estadistico de la devianza" = logbinonial8.start1$deviance , "Grados de libertad" = logbinonial8.start1$df.residual)
rbind("Estadistico de la devianza" = logbinonial8.start1$deviance , "Grados de libertad" = logbinonial8.start1$df.residual, "P-valor"=1-pchisq(logbinonial8.start1$deviance, 1402))
### 6.2. Modelos de regresión log-binomial.
###### 6.2.1.Con función "glm".
hoslem.test(logbinonial8.start1$y, fitted(logbinonial8.start1), g=10)
rbind("Estadistico de la devianza" = logbinonial8.start1$deviance , "Grados de libertad" = logbinonial8.start1$df.residual, "P-valor"=1-pchisq(logbinonial8.start1$deviance, 1402))
rbind("Estadistico de la devianza" = logistica8$deviance , "Grados de libertad" = logistica8$df.residual, "P-valor"=1-pchisq(logistica8$deviance, 1402))
# -------- 6. PRUEBAS DE BONDAD DE AJUSTE. -------- #
### 6.1. Modelos de regresión logística.
hoslem.test(logistica8$y, fitted(logistica8), g=10)
### 5.2. Síntomas de depresión a las 8 semanas (EPDS>9).
##### 5.2.1.Con n=100 copias.
logbinonial8.copy100 <- copy(dppdat,'epds8wc', vars = c('epqnT','epds0','duke','antpers'),100)
summary(logbinonial8.copy100)
copy <- function(data, Y, vars,n, W) {
if (!is.numeric(data[, Y])) {
data[, Y] <- as.numeric(data[, Y])-1
}
data$W <- (n-1)/n
data.copy <- data
data.copy[, Y] <- 1-data.copy[, Y]
data.copy$W <- 1/n
data.all <- merge(data, data.copy, all = T)
formul <- paste(Y, paste(vars, collapse = " + "), sep = "~")
mod.mat <- model.matrix(as.formula(formul), data)
glm.copy <- glm(as.formula(formul), family = binomial(log), data.all,
weights = W, control = list(maxit = 100),
start = c(-4, rep(0, ncol(mod.mat)-1)))
return(glm.copy)
}
### 5.2. Síntomas de depresión a las 8 semanas (EPDS>9).
##### 5.2.1.Con n=100 copias.
logbinonial8.copy100 <- copy(dppdat,'epds8wc', vars = c('epqnT','epds0','duke','antpers'),100)
summary(logbinonial8.copy100)
rbind("Estadistico de la devianza" = logbinonial8.copy100$deviance , "Grados de libertad" = logbinonial8.copy100$df.residual, "P-valor"=1-pchisq(logbinonial8.copy100$deviance, 2809))
# -------- 1. LECTURA DE DATOS. -------- #
load("DPP.RData")
summary(dppdat)
frequency(dppdat$epds8wc)
frequency(dppdat$epds8wc[1:500])
dppdat %>% freq(epds8wc)
table(dppdat)
table(dppdat$epds0)
count(dppdat, vars = epds8wc, wt_var = NULL)
nrows(dppdat)
nrow(dppdat)
nrow(dppdat$epds8w)
x<-dppdat$epds8w
x
length(x)
is.na(x)
sum(is.na(x))
summary(dppdat)
# -------- 2. MODELOS DE REGRESIÓN LOGÍSTICA. -------- #
### 2.1. Síntomas de depresión a las 8 semanas (EPDS>9).
logistica8 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat,family=binomial(link="logit"))
est<-sum(residuals(logistica8, type="deviance")^2)
est
### 6.2. Modelos de regresión log-binomial.
###### 6.2.1.Con función "glm".
rbind("Estadistico de la devianza" = logbinonial8.start1$deviance , "Grados de libertad" = logbinonial8.start1$df.residual, "P-valor"=1-pchisq(logbinonial8.start1$deviance, logbinonial8.start1$df.residual))
# -------- 7. PRUEBAS DE BONDAD DE AJUSTE CON DEVIANZA. -------- #
### 6.1. Modelos de regresión logística.
rbind("Estadistico de la devianza" = logistica8$deviance , "Grados de libertad" = logistica8$df.residual, "P-valor"=1-pchisq(logistica8$deviance, logistica8$df.residual))
p-valor <- 1-pchisq(est, 1)
pchisq(est,1)
# -------- 7. PRUEBAS DE BONDAD DE AJUSTE CON DEVIANZA. -------- #
### 6.1. Modelos de regresión logística.
rbind("Estadistico de la devianza" = logistica8$deviance , "Grados de libertad" = logistica8$df.residual, "P-valor"=1-pchisq(logistica8$deviance, logistica8$df.residual))
### 2.2. Síntomas de depresión a las 32 semanas (EPDS>9).
logistica32 <- glm(epds32winc~epqnT+epds0+ecoprob, data=dppdat,family=binomial(link="logit"))
rbind("Estadistico de la devianza" = logistica32$deviance , "Grados de libertad" = logistica32$df.residual, "P-valor"=1-pchisq(logistica32$deviance, logistica32$df.residual))
est<-sum(residuals(logistica32, type="deviance")^2)
pchisq(est,1)
airquality
with(airquality, table(cut(Temp, quantile(Temp)), Month))
View(dppdat)
table(epds8wc, freq(epds8wc)
)
# -------- 8. TABLAS DE CONTINGENCIA. -------- #
with(dppdat, table(epds8wc, freq(epds8wc)))
# -------- 8. TABLAS DE CONTINGENCIA. -------- #
with(dppdat, table(epds8wc))
# -------- 8. TABLAS DE CONTINGENCIA. -------- #
with(dppdat, table(c(epds8wc,epds32winc,digs0a32)))
table(epds8wc)
table(dppdat$epds8wc)
table(dppdat$epds32winc)
table(dppdat$digs0a32)
table(dppdat$epds8wc, dppdat$epds0)
cbind("Uno"=table(dppdat$epds8wc), "Dos"=table(dppdat$epds8wc))
cbind("Uno"=table(dppdat$epds8wc), "Dos"=table(dppdat$epds32winc))
cbind("Uno"=table(dppdat$epds8wc), "Dos"=table(dppdat$epds32winc), "Tres"=table(dppdat$digs0a32))
rbind("Uno"=table(dppdat$epds8wc), "Dos"=table(dppdat$epds32winc), "Tres"=table(dppdat$digs0a32))
rbind("Modelo 1"=table(dppdat$epds8wc), "Modelo 2"=table(dppdat$epds32winc), "Modelo 3"=table(dppdat$digs0a32))
rbind("Modelo 1"=c(1189,218), "Modelo 2"=c(922,78), "Modelo 3"=tablec(1032,142))
rbind("Modelo 1"=c(1189,218), "Modelo 2"=c(922,78), "Modelo 3"=c(1032,142))
cbind(I = 0, X = rbind(a = 1, b = 1:3))
cbind("Y=1" = 0, "Y=0" = rbind(a = 1, b = 1:3))
rbind("Modelo 1"=c(1189,218), "Modelo 2"=c(922,78), "Modelo 3"=c(1032,142))
rbind("Modelo 1"=c(1189,218), "Modelo 2"=c(922,78), "Modelo 3"=c(1032,142), colnames=c("Yes", "No"))
data.frame("Modelo 1"=c(1189,218), "Modelo 2"=c(922,78), "Modelo 3"=c(1032,142), colnames=c("Yes", "No"))
data.frame("Modelo 1"=c(1189,218), "Modelo 2"=c(922,78), "Modelo 3"=c(1032,142), rownames=c("Yes", "No"))
df <- data.frame("Modelo 1"=c(1189,218), "Modelo 2"=c(922,78), "Modelo 3"=c(1032,142))
df <- data.frame("Modelo 1"=c(1189,218), "Modelo 2"=c(922,78), "Modelo 3"=c(1032,142), row.names = c("Yes", "No"))
df
# -------- 8. TABLAS DE CONTINGENCIA. -------- #
table(dppdat$epds8wc)
table(dppdat$epds32winc)
table(dppdat$digs0a32)
df <- data.frame("Modelo 1"=c(1189,218), "Modelo 2"=c(922,78), "Modelo 3"=c(1032,142), row.names = c("No", "Yes"))
df
1189+218
922+78
1032+142
df <- data.frame("Modelo 1"=c(1189,218, 1407), "Modelo 2"=c(922,78, 1000), "Modelo 3"=c(1032,142, 1174), row.names = c("No", "Yes","Total"))
df
df$Modelo.1
df$Modelo.1[1]
df$Modelo.1[1]*100/df$Modelo.1[1]
df$Modelo.1[1]*100/df$Modelo.1[3]
df$Modelo.1[3]
df[1,3]
df[1,1]
df <- data.frame("Modelo 1"=c(1189,218, 1407), "Modelo 2"=c(922,78, 1000), "Modelo 3"=c(1032,142, 1174), row.names = c("No", "Yes","Total"))
df
for (i in 1:3){
for(i in j:2){
percent[i,j] <-  df[i,j]*100/df[i,3]
}
}
for (i in 1:3){
for(j in j:2){
percent[i,j] <-  df[i,j]*100/df[i,3]
}
}
for (i in 1:3){
for(j in j:2){
percent[i,j] <-  df[i,j]*100/df[i,3]
}
}
for (i in 1:3){
for(j in 1:2){
percent[i,j] <-  df[i,j]*100/df[i,3]
}
}
percent <- vector()
for (i in 1:3){
for(j in 1:2){
percent[i,j] <-  df[i,j]*100/df[i,3]
}
}
percent <- matrix()
for (i in 1:3){
for(j in 1:2){
percent[i,j] <-  df[i,j]*100/df[i,3]
}
}
View(percent)
View(percent)
percent <- vector()
for (i in 1:3){
for(j in 1:2){
percent <-  c(percent, df[i,j]*100/df[i,3])
}
}
percent
percent <- vector()
for (i in 1:3){
for(j in 1:3){
percent <-  c(percent, df[i,j]*100/df[i,3])
}
}
percent
df[1,1]*100/df[1,3]
df[1,1]
df[1,3]
percent <- vector()
for (i in 1:3){
for(j in 1:3){
percent <-  c(percent, df[i,j]*100/df[3,1])
}
}
percent
df[1,1]
df[3,1]
df
df[3,2]
percent <- vector()
for (i in 1:3){
for(j in 1:3){
percent <-  c(percent, df[i,j]*100/df[3,i])
}
}
percent
percent <- vector()
for (i in 1:3){
for(j in 1:3){
percent <-  c(percent, df[i,j]*100/df[3,j])
}
}
percent
df
df <- data.frame("Modelo 1. N"=c(1189,218, 1407),"Modelo 1.%"=c(84.51,15.49, 100), "Modelo 2.N"=c(922,78, 1000), "Modelo 2.%"=c(92.2,7.8, 100), "Modelo 3.N"=c(1032,142, 1174), "Modelo 3.%"=c(87.9,12.1, 100), row.names = c("No", "Yes","Total"))
df
df <- data.frame("Modelo 1.N"=c(1189,218, 1407),"Modelo 1.Perc"=c(84.51,15.49, 100), "Modelo 2.N"=c(922,78, 1000), "Modelo 2.%"=c(92.2,7.8, 100), "Modelo 3.N"=c(1032,142, 1174), "Modelo 3.%"=c(87.9,12.1, 100), row.names = c("No", "Yes","Total"))
df
df <- data.frame("Modelo 1.N"=c(1189,218, 1407),"Modelo 1.Perc"=c(84.51,15.49, 100), "Modelo 2.N"=c(922,78, 1000), "Modelo 2.1.Perc"=c(92.2,7.8, 100), "Modelo 3.N"=c(1032,142, 1174), "Modelo 3.1.Perc"=c(87.9,12.1, 100), row.names = c("No", "Yes","Total"))
df
df.perc <- data.frame("Modelo 1"=c(84.51,15.49, 100), "Modelo 2"=c(92.2,7.8, 100), "Modelo 3."=c(87.9,12.1, 100), row.names = c("No", "Yes","Total"))
df.perc
# -------- 1. LECTURA DE DATOS. -------- #
load("DPP.RData")
table(dppdat$epds8wc, c(dppdat$epqnT, dppdat$epds0))
View(dppdat)
table(dppdat$epds8wc, c(dppdat$epqnT, dppdat$epds0))
table(dppdat$epds8wc, dppdat$antpers)
table(dppdat$epds8wc, dppdat$edps0
)
table(dppdat$epds8wc, dppdat$edps0 )
table(dppdat$epds8wc, dppdat$epqnT )
table(dppdat$epqnT,dppdat$epds8wc)
table(dppdat$epds0,dppdat$epds8wc)
table(dppdat$epds0,dppdat$duke)
table(dppdat$duke,dppdat$epds8wc)
table(c(dppdat$epds0,dppdat$duke),dppdat$epds8wc)
table(c(dppdat$epds0,dppdat$epds0),dppdat$epds8wc)
table(c(dppdat$epds0,dppdat$duke),c(dppdat$epds8wc,dppdat$epds8wc))
table(dppdat$epds8wc)
prop.table(table(dppdat$epds8wc))*100
prop.table(table(dppdat$epds8wc))*100
barplot(table(dppdat$epds8wc),names.arg="")
barplot(table(dppdat$epds8wc))
# -------- 6. ESTUDIO DE PRESENCIA DE SEPARACIÓN EN LOS MODELOS LOG-BINOMIALES 1 Y 3. -------- #
#install.packages("safeBinaryRegression")
library(safeBinaryRegression)
# -------- 1. LECTURA DE DATOS. -------- #
load("DPP.RData")
# -------- 2. MODELOS DE REGRESIÓN LOGÍSTICA. -------- #
### 2.1. Síntomas de depresión a las 8 semanas (EPDS>9).
logistica8 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat,family=binomial(link="logit"))
summary(logistica8)
# -------- 2. MODELOS DE REGRESIÓN LOGÍSTICA. -------- #
### 2.1. Síntomas de depresión a las 8 semanas (EPDS>9).
logistica8 <- glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat,family=binomial(link="logit"))
### 6.1. Síntomas de depresión a las 8 semanas (EPDS>9).
glm(epds8wc~epqnT+epds0+duke+antpers, data=dppdat, family=binomial(link="log"), separation ="find")
### 6.2. Diagnóstico clínico de la depresión postparto (DIGS).
glm(digs0a32~epqnT+epds0+antpers+antpsifa+expvit, data=dppdat, family=binomial(link="log"), separation ="find")
