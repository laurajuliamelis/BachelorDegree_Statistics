pacf(d12difldata,ylim=c(-1,1),lag=100)
# S'ha solucionat el problema d'estacionarietat?
adf.test(d12difldata) # Test procés estacionari: sí és estacionari.
auto.arima(d12difldata,d=1, D=1)
auto.arima(d12difldata)
auto.arima(data)
m1<-arima(d12difldata,order=c(1,0,1))
m1
arima(d12difldata,order=c(1,0,0))
arima(d12difldata,order=c(0,0,1))
arima(d12difldata,order=c(2,0,1))
arima(d12difldata,order=c(2,0,0))
# ----
par(mfrow=c(2,1))
plot(acf(difdata,lag=100, plot=F), ylim=c(-1,1))
pacf(difdata,ylim=c(-1,1),lag=100)
d12difdata<-diff(difdata,lag=12)
par(mfrow=c(1,1))
plot.ts(d12difdata,col=4)
par(mfrow=c(2,1))
plot(acf(d12difdata,lag=100, plot=F), ylim=c(-1,1))
pacf(d12difdata,ylim=c(-1,1),lag=100)
plot.ts(d12difdata,col=4)
plot.ts(difdata,col=4) # Hem eliminat tendència
## 2.2.1 OBTENCIÓ D'UN PROCÉS ESTOCÀSTIC ESTACIONARI.
## Té tendència: no és estacionari. Agafem diferències (regulars) per a solucionar-ho.
difdata<-diff(data)
par(mfrow=c(1,1))
plot.ts(difdata,col=4) # Hem eliminat tendència
d12difdata<-diff(difdata,lag=12)
par(mfrow=c(1,1))
plot.ts(d12difdata,col=4)
d12difdata<-diff(data,lag=12)
par(mfrow=c(1,1))
plot.ts(d12difdata,col=4)
## 2.2.1 OBTENCIÓ D'UN PROCÉS ESTOCÀSTIC ESTACIONARI.
## Té tendència: no és estacionari. Agafem diferències (regulars) per a solucionar-ho.
difdata<-diff(data)
par(mfrow=c(1,1))
plot.ts(difdata,col=4) # Hem eliminat tendència
# S'ha solucionat el problema d'estacionarietat?
adf.test(difdata) # Test procés estacionari: sí és estacionari.
## 2.2.2 IDENTIFICACIÓ DEL MODEL.
par(mfrow=c(2,1))
plot(acf(difdata,lag=100, plot=F), ylim=c(-1,1))
pacf(difdata,ylim=c(-1,1),lag=100)
auto.arima(difdata,d=1, D=1) # indiquem diferències de primer ordre i estacionarietat.
## 2.2.3. VALIDACIÓ DEL MODEL.
shapiro.test(model$residuals) # normalitat residus
Box.test(model$residuals) # independencia residus
#B?squeda de mejor modelo
m1<-arima(dsm,order=c(1,0,1))
m1
pnorm(c(abs(m1$coef)/sqrt(diag(m1$var.coef))), mean = 0,sd=1,lower.tail = F)
m2<-arima(dsm,order=c(1,0,2))
m2
pnorm(c(abs(m2$coef)/sqrt(diag(m2$var.coef))), mean = 0,sd=1,lower.tail = F)
pasa<-ts(read.table("passatgers.txt"),start=1978.1,frequency=12)
plot.ts(pasa,col=4)
lpasa<-log(pasa)
par(mfrow=c(1,1))
plot.ts(lpasa,col=4)
dlpasa<-diff(lpasa)
par(mfrow=c(1,1))
plot.ts(dlpasa,col=4)
par(mfrow=c(2,1))
acf(dlpasa,ylim=c(-1,1),lag=100)
pacf(dlpasa,ylim=c(-1,1),lag=100)
plot(acf, ylim=c(-1,1))
dlpasa<-diff(lpasa)
par(mfrow=c(1,1))
plot.ts(dlpasa,col=4)
par(mfrow=c(2,1))
acf<- acf(dlpasa,ylim=c(-1,1),lag=100)
plot(acf, ylim=c(-1,1))
pacf(dlpasa,ylim=c(-1,1),lag=100)
d12dlpasa<-diff(dlpasa,lag=12)
par(mfrow=c(1,1))
plot.ts(d12dlpasa,col=4)
par(mfrow=c(2,1))
acf(d12dlpasa,ylim=c(-1,1),lag=100)
pacf(d12dlpasa,ylim=c(-1,1),lag=100)
plot(acf(d12dlpasa,ylim=c(-1,1),lag=100))
d12dlpasa<-diff(dlpasa,lag=12)
par(mfrow=c(1,1))
plot.ts(d12dlpasa,col=4)
par(mfrow=c(2,1))
plot(acf(d12dlpasa,lag=100),ylim=c(-1,1))
pacf(d12dlpasa,ylim=c(-1,1),lag=100)
par(mfrow=c(1,1))
plot.ts(d12dlpasa,col=4)
par(mfrow=c(2,1))
plot(acf(d12dlpasa,lag=100),ylim=c(-1,1))
pacf(d12dlpasa,ylim=c(-1,1),lag=100)
plot(acf(d12dlpasa,lag=100),ylim=c(-1,1))
pacf(d12dlpasa,ylim=c(-1,1),lag=100)
par(mfrow=c(2,1))
acf(d12dlpasa,ylim=c(-1,1),lag=12)
pacf(d12dlpasa,ylim=c(-1,1),lag=12)
par(mfrow=c(2,1))
plot(acf(d12dlpasa,lag=12),ylim=c(-1,1))
pacf(d12dlpasa,ylim=c(-1,1),lag=12)
plot(acf(d12dlpasa,lag=12),ylim=c(-1,1))
pacf(d12dlpasa,ylim=c(-1,1),lag=12)
plot(acf(d12dlpasa,lag=100),ylim=c(-1,1))
pacf(d12dlpasa,ylim=c(-1,1),lag=100)
plot(acf(d12dlpasa,lag=100),ylim=c(-1,1))
pacf(d12dlpasa,ylim=c(-1,1),lag=100)
serie<-ts(read.table("had.txt"),start=1880,frequency=12)
par(mfrow=c(1,1))
plot.ts(serie,col=4)
dserie<-diff(serie)
par(mfrow=c(1,1))
plot(dserie)
par(mfrow=c(2,1))
plot(acf(dserie,lag=100),ylim=c(-1,1))
pacf(dserie,ylim=c(-1,1),lag=100)
plot(acf(dserie,lag=100),ylim=c(-1,1))
pacf(dserie,ylim=c(-1,1),lag=100)
par(mfrow=c(2,1))
plot(acf(dserie,lag=12),ylim=c(-1,1))
pacf(dserie,ylim=c(-1,1),lag=12)
plot(acf(dserie,lag=12),ylim=c(-1,1))
pacf(dserie,ylim=c(-1,1),lag=12)
plot(acf(difdata,lag=12),ylim=c(-1,1))
pacf(difdata,ylim=c(-1,1),lag=12)
plot(acf(difdata,lag=12),ylim=c(-1,1))
pacf(difdata,ylim=c(-1,1),lag=12)
pnorm(c(abs(model$coef)/sqrt(diag(model$var.coef))), mean=0, sd=1, lower.tail=FALSE)
model<-arima(serie,order = c(0,1,1),seasonal = list (order = c(0,0,0)))
model
pnorm(c(abs(model$coef)/sqrt(diag(model$var.coef))), mean=0, sd=1, lower.tail=FALSE)
auto.arima(difdata,d=1, D=1) # indiquem diferències de primer ordre i estacionarietat.
auto.arima(difdata,d=1, D=1) # indiquem diferències de primer ordre i estacionarietat.
auto.arima(difdata,d=1, D=1) # indiquem diferències de primer ordre i estacionarietat.
model<-arima(data,order = c(0,1,0),seasonal = list (order = c(0,0,0)))
model
model
model<-arima(serie,order = c(0,1,1),seasonal = list (order = c(0,0,0)))
model
model<-arima(serie,order = c(0,1,0),seasonal = list (order = c(0,0,0)))
model<-arima(serie,order = c(0,1,1),seasonal = list (order = c(0,0,0)))
m2<-arima(dsm,order=c(1,0,2))
m2
model<-arima(data,order = c(0,1,0),seasonal = list (order = c(0,0,0)))
model
model<-arima(data,order = c(0,1,0))
model
auto.arima(difdata,d=1, D=1) # indiquem diferències de primer ordre i estacionarietat.
auto.arima(difdata,, D=1) # indiquem diferències de primer ordre i estacionarietat.
auto.arima(difdata,d=1) # indiquem diferències de primer ordre i estacionarietat.
auto.arima(difdata) # indiquem diferències de primer ordre i estacionarietat.
model<-arima(data,order = c(2,0,2))
model<-arima(difdata,order = c(2,0,2))
model
auto.arima(difdata,D=1) # indiquem diferències de primer ordre i estacionarietat.
auto.arima(difdata,d=1) # indiquem diferències de primer ordre i estacionarietat.
model<-arima(difdata,order = c(2,0,2)) # estimació del model
model
## 2.2.3. VALIDACIÓ DEL MODEL.
shapiro.test(model$residuals) # normalitat residus
Box.test(model$residuals) # independencia residus
auto.arima(difdata) # millor model ARIMA
model<-arima(difdata,order = c(2,0,2)) # estimació del model
model
## 2.2.3. VALIDACIÓ DEL MODEL.
shapiro.test(model$residuals) # normalitat residus
Box.test(model$residuals) # independencia residus
pnorm(c(abs(model$coef)/sqrt(diag(model$var.coef))), mean=0, sd=1, lower.tail=FALSE)
# Normalitat dels residus
jarqueberaTest(model$residuals)
# load package plspm
library("fBasics")
# Normalitat dels residus
jarqueberaTest(model$residuals)
# Autocorrelaci? dels residus: Ljung-Box
tsdiag(model)
model$residuals
par(mfrow=c(1,1))
plot(acf(model$residuals,lag=100),ylim=c(-1,1))
pacf(model$residuals,ylim=c(-1,1),lag=100)
par(mfrow=c(2,1))
plot(acf(model$residuals,lag=100),ylim=c(-1,1))
pacf(model$residuals,ylim=c(-1,1),lag=100)
plot(acf(model$residuals,lag=100),ylim=c(-1,1))
pacf(model$residuals,ylim=c(-1,1),lag=100)
par(mfrow=c(2,1))
acf(model$residuals,ylim=c(-1,1),lag=100)
model<-arima(lpasa,order = c(0,1,1),seasonal = list (order = c(0,1,0)))
model
model<-arima(difdata,order = c(2,0,2)) # estimació del model
model
## 2.2.3. VALIDACIÓ DEL MODEL.
shapiro.test(model$residuals) # normalitat residus
model<-arima(difdata,order = c(2,0,2)) # estimació del model
model
par(mfrow=c(2,1))
plot(acf(model$residuals,lag=100), ylim=c(-1,1))
par(mfrow=c(2,1))
plot(acf(model$residuals,lag=100), ylim=c(-1,1))
pacf(model$residuals,ylim=c(-1,1),lag=100)
plot(acf(model$residuals,lag=100), ylim=c(-1,1))
pacf(model$residuals,ylim=c(-1,1),lag=100)
## 2.2.3. VALIDACIÓ DEL MODEL.
# Anàlisi dels residus.
shapiro.test(model$residuals) # normalitat residus
Box.test(model$residuals) # independencia residus
# Significació dels coeficients
pnorm(c(abs(model$coef)/sqrt(diag(model$var.coef))), mean=0, sd=1, lower.tail=FALSE)
model<-arima(lpasa,order = c(0,1,1),seasonal = list (order = c(0,1,0)))
model
par(mfrow=c(2,1))
acf(model$residuals,ylim=c(-1,1),lag=100)
pacf(model$residuals,ylim=c(-1,1),lag=100)
par(mfrow=c(2,1))
plot(acf(model$residuals,lag=100),ylim=c(-1,1))
pacf(model$residuals,ylim=c(-1,1),lag=100)
plot(acf(model$residuals,lag=100),ylim=c(-1,1))
pacf(model$residuals,ylim=c(-1,1),lag=100)
read.table("had.txt")
serie <- read.table("had.txt")
View(serie)
## IMPORTACIÓ DE LA BASE DE DADES.
dades<- ts(read.table("dades.txt"))
## IMPORTACIÓ DE LA BASE DE DADES.
dades<- read.table("dades.txt")
View(dades)
## 2.2.3. ESTIMACIÓ I VALIDACIÓ DEL MODEL.
# Estimació del model
model<-arima(difdata,order = c(2,0,2))
model
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)
pred
ts.plot(data,pred$pred,col=1:2)
## IMPORTACIÓ DE LA BASE DE DADES.
dades<- ts(read.table("dades.txt"))
data<-dades[-c(73:80)] #Període mostral
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)
pred
ts.plot(data,pred$pred,col=1:2)
serie2f<-predict(model2,n.ahead=21)
serie2f
ts.plot(serie,serie2f$pred,col=1:2)
serie2f <- ts(serie2f)
ts.plot(serie,serie2f$pred,col=1:2)
#Predicciones
pr<-predict(m2,n.ahead=12)$pred
pr
#Gr?fico de las predicciones
plot(pr)
par(mfrow=c(1,1))
par(mfrow=c(1,1))
#Gr?fico de las predicciones
plot(pr)
#Predicciones y valores diferencia
ts.plot(dsm,m2$residuals,col=c(1,2))
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
pred
#Gr?fico de las predicciones
plot(pred)
ts.plot(difdata,model$residuals,col=c(1,2))
ts.plot(difdata,model$residuals,col=c(2,2))
ts.plot(difdata,model$residuals,col=c(3,2))
ts.plot(difdata,model$residuals,col=c(4,2))
plot(c(data,dataExtra),type="l", ylab=" ", main=" ")
lines(prd,type="l",x=c(73:80),col="red")
prd<-tail(data,8)-pred
prd
lines(prd,type="l",x=c(73:80),col="red")
plot(prd, type="l", xlab="meses", ylab="predicci?n")
plot(c(data,dataExtra),type="l", ylab=" ", main=" ")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
pred
ts.plot(difdata,model$residuals,col=c(4,2))
plot(c(data,dataExtra),type="l", ylab=" ", main=" ")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
ts.plot(serie,serie2f$pred,col=1:2)
ts.plot(serie,serief$pred, col=c(4,2))
serief<-predict(model,n.ahead=15)
serief
ts.plot(serie,serief$pred, col=c(4,2))
inf = serief$pred + 2*serief$se
sup = serief$pred - 2*serief$se
minx=min(serie,inf)
maxx=max(serie,sup)
ts.plot(serie,serief$pred, col=c(4,2))
lines(inf, col="blue", lty="dashed")
lines(sup, col="blue", lty="dashed")
datapred<-predict(model,n.ahead=8)$pred
datapred <- ts(datapred)
ts.plot(data,datapred, col=c(4,2))
ts.plot(data)
lines(datapred,type="l",col="red")
ts.plot(data)
lines(datapred,type="l",col="red")
plot(data)
plot(data,type="l")
lines(datapred,type="l",col="red")
datapred<-predict(model,n.ahead=8)$pred
plot(data,type="l")
lines(datapred,type="l",col="red")
datapred
datapred<-predict(model,n.ahead=8)$pred
datapred
datapred<-predict(model,n.ahead=8)
datapred <- ts(datapred$pred)
plot(data,type="l")
lines(datapred,type="l",col="red")
plot(difdata,type="l")
lines(datapred,type="l",col="red")
lines(datapred,type="l",x=c(73:80),col="red")
plot(difdata,type="l")
lines(datapred,type="l",x=c(73:80),col="red")
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
pred
par(mfrow=c(1,1))
plot(pred)
ts.plot(difdata,model$residuals,col=c(4,2))
plot(c(data,dataExtra),type="l", ylab=" ", main=" ")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
plot(pred)
par(mfrow=c(1,1))
ts.plot(difdata,model$residuals,col=c(4,2))
plot(c(data,dataExtra),type="l", ylab=" ", main=" ")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
plot(c(data,dataExtra),type="l", ylab=" ", main=" ")
plot(dades,type="l", ylab=" ", main=" ")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
# Capacitat predictiva
errors<-dataExtra[1:8]-prd
errors
# Capacitat predictiva
errors<-dataExtra-prd
errors
ts.plot(errors,col=2,main="Error",xlab="Mes")
plot(dades,type="l", ylab=" ", main=" ")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
EQM  <- sum(e^2)/8 # Error quadràtic mitjà
# Capacitat predictiva
e <- dataExtra-prd
# Capacitat predictiva
e <- dataExtra-pred
ts.plot(e,col=2,main="Error",xlab="Mes")
EQM  <- sum(e^2)/8 # Error quadràtic mitjà
EAM  <- sum(abs(e))/8  # Error absolut mitjà
EPAM <- sum(abs(e)/dataExtra)/8
fit <-auto.arima(difdata) # millor model ARIMA
pred <- predict(fit, n.ahead = 8)
pred
plot(data,type="l",xlab = "Mes",ylab ="Atur")
lines(10^(pred$pred),col="blue")
lines(10^(pred$pred),col="blue")
plot(dades,type="l", ylab=" ", main=" ")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
pred
par(mfrow=c(1,1))
ts.plot(difdata,model$residuals,col=c(4,2))
plot(dades,type="l", ylab=" ", main=" ")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
plot(data,type="l",x=c(73:80),xlab = "Mes",ylab ="Atur")
lines(tail(data,8)-pred,type="l",xlab = "Mes",ylab ="Atur",x=c(73:80),col="red")
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
pred
par(mfrow=c(1,1))
ts.plot(difdata,model$residuals,col=c(4,2))
plot(dades,type="l", ylab=" ", main=" ")
lines(tail(data,8)-pred,type="l",xlab = "Mes",ylab ="Atur",x=c(73:80),col="red")
plot(dades,type="l", ylab=" ", main=" ",xlab = "Mes",ylab ="Atur")
plot(dades,type="l",xlab = "Mes",ylab ="Atur")
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
pred
par(mfrow=c(1,1))
ts.plot(difdata,model$residuals,col=c(4,2))
plot(dades,type="l",xlab = "Mes",ylab ="Atur")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
plot(dades,type="l",xlab = "Mes",ylab ="Atur")
plot(dades,type="l",xlab = "Mes",ylab ="Atur", col=3)
plot(dades,type="l",xlab = "Mes",ylab ="Atur", col=4)
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
# Capacitat predictiva
e <- dataExtra-pred
ts.plot(e,col=2,main="Error",xlab="Mes")
e
ts.plot(e,col=2,main="Error",xlab="Mes")
EQM  <- sum(e^2)/8 # Error quadràtic mitjà
EAM  <- sum(abs(e))/8  # Error absolut mitjà
EPAM <- sum(abs(e)/dataExtra)/8
cbind(EQM=EQM, EAM= EAM, EPAM=EPAM)
#Periodo muestral y expremuestral con predicciones
prd<-tail(sm,12)-pr
prd
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
pred
prediccions<-tail(data,12)-pred
prddiccions
prediccions
prediccions<-tail(data,12)-pred
pred
## 2.2.3. ESTIMACIÓ I VALIDACIÓ DEL MODEL.
# Estimació del model
model<-arima(difdata,order = c(2,0,2))
model
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
pred
prediccions<-tail(data,12)-pred
prediccions<-tail(dades,12)-pred
prediccions
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
pred
prediccions<-tail(dades,12)-pred
prediccions
dades
# Capacitat predictiva
e <- dataExtra-prediccions
e
ts.plot(e,col=2,main="Error",xlab="Mes")
EQM  <- sum(e^2)/8 # Error quadràtic mitjà
EAM  <- sum(abs(e))/8  # Error absolut mitjà
EPAM <- sum(abs(e)/dataExtra)/8
cbind(DadesObservades= dataExtra, Prediccions=prediccions, error= e)
cbind(DadesObservades= dataExtra, Prediccions=prediccions, error= e,EQM=EQM, EAM= EAM, EPAM=EPAM)
cbind(DadesObservades= dataExtra, Prediccions=prediccions)
cbind(DadesObservades= dataExtra, Prediccions=prediccions, error= e)
cbind(EQM=EQM, EAM= EAM, EPAM=EPAM)
ts.plot(difdata,model$residuals,col=c(4,2))
# Capacitat predictiva
e <- dataExtra-prediccions
ts.plot(e,col=2,main="Error",xlab="Mes")
ts.plot(e,col=2,main="Error",xlab="Mes")
plot(dades,type="l",xlab = "Mes",ylab ="Atur", col=4)
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
lines(tail(data,8)-prediccions,type="l",x=c(73:80),col="red")
plot(dades,type="l",xlab = "Mes",ylab ="Atur", col=4)
lines(tail(data,8)-prediccions,type="l",x=c(73:80),col="red")
lines(tail(data,8)-pred,type="l",x=c(73:80),col="red")
plot(dades,type="l",xlab = "Mes",ylab ="Atur", col=4)
lines(prediccions,type="l",x=c(73:80),col="red")
####################################
###  ANÀLISI DE SÈRIES TEMPORALS ###
###          PRÀCTICA 2          ###
### Laura Julià Melis - 16810883 ###
####################################
library(MASS)
library(forecast)
library(TSA)
library(tseries)
## IMPORTACIÓ DE LA BASE DE DADES.
dades<- ts(read.table("dades.txt"))
data<-dades[-c(73:80)] #Període mostral
dataExtra<-dades[c(73:80)] #Període extra-mostral
## 2.1. TIPOLOGIA DE LA SÈRIE.
plot.ts(data,col=c(4)) # Sèrie amb tendència negativa i sense estacionalitat.
par(mfrow=c(2,1))
plot(acf(data,lag=100, plot=F), ylim=c(-1,1))
pacf(data,ylim=c(-1,1),lag=100)
## 2.2.1 OBTENCIÓ D'UN PROCÉS ESTOCÀSTIC ESTACIONARI.
## Té tendència: no és estacionari. Agafem diferències (regulars) per a solucionar-ho.
difdata<-diff(data)
par(mfrow=c(1,1))
plot.ts(difdata,col=4) # Hem eliminat tendència
# S'ha solucionat el problema d'estacionarietat?
adf.test(difdata) # Test procés estacionari: sí és estacionari.
## 2.2.2 IDENTIFICACIÓ DEL MODEL.
par(mfrow=c(2,1))
plot(acf(difdata,lag=100, plot=F), ylim=c(-1,1))
pacf(difdata,ylim=c(-1,1),lag=100)
fit <-auto.arima(difdata) # millor model ARIMA
## 2.2.3. ESTIMACIÓ I VALIDACIÓ DEL MODEL.
# Estimació del model
model<-arima(difdata,order = c(2,0,2))
model
# Anàlisi dels residus.
shapiro.test(model$residuals) # normalitat residus
Box.test(model$residuals) # independencia residus
par(mfrow=c(2,1))
plot(acf(model$residuals,lag=100), ylim=c(-1,1))
pacf(model$residuals,ylim=c(-1,1),lag=100)
# Significació dels coeficients
pnorm(c(abs(model$coef)/sqrt(diag(model$var.coef))), mean=0, sd=1, lower.tail=FALSE)
## 2.2.4. PREDICCIONS.
pred<-predict(model,n.ahead=8)$pred
prediccions<-tail(dades,12)-pred
prediccions
par(mfrow=c(1,1))
ts.plot(difdata,model$residuals,col=c(4,2))
plot(dades,type="l",xlab = "Mes",ylab ="Atur", col=4)
lines(prediccions,type="l",x=c(73:80),col="red")
# Capacitat predictiva
e <- dataExtra-prediccions
ts.plot(e,col=2,main="Error",xlab="Mes")
EQM  <- sum(e^2)/8 # Error quadràtic mitjà
EAM  <- sum(abs(e))/8  # Error absolut mitjà
EPAM <- sum(abs(e)/dataExtra)/8
cbind(DadesObservades= dataExtra, Prediccions=prediccions, error= e)
cbind(EQM=EQM, EAM= EAM, EPAM=EPAM)
cbind(EQM=EQM, EAM= EAM, EPAM=EPAM*100)
EPAM <- (sum(abs(e)/dataExtra)/8)*100
cbind(EQM=EQM, EAM= EAM, EPAM=EPAM"%")
cbind(EQM=EQM, EAM= EAM, EPAM="2.8%")
