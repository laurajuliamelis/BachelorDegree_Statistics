knitr::opts_chunk$set(echo = TRUE)
df <- read.table("data_status.txt", header=T)
View(df)
par(mfrow=c(1,2), las=1)
hist(df$repeater, ylab = 'Frecuencia', xlab = 'Repeater', main = 'Histograma de repeater', col = 'lightblue3')
##install.packages("car")
library(car)
##install.packages("MASS")
library(MASS)
##install.packages("AER")
library(AER)
##install.packages("AER")
library(AER)
##install.packages("effects")
library(effects)
##install.packages("AER")
library(AER)
##install.packages("effects")
library(effects)
##install.packages("lmtest")
library(lmtest)
##install.packages("Hmisc")
library(Hmisc)
summary(df)
describe(df$repeater)
table_sex <- table(df$repeater)
pie(table_sex, labels = paste(c('Yes', 'No'), round(table_repeater/270,2)*100, '%'), main = 'Diagrama circular de repeater',col=c('lightblue3','lightblue1'))
table_repeater <- table(df$repeater)
pie(table_sex, labels = paste(c('Yes', 'No'), round(table_repeater/270,2)*100, '%'), main = 'Diagrama circular de repeater',col=c('lightblue3','lightblue1'))
View(df)
describe(df$repeater)
table_repeater <- table(df$repeater)
pie(table_sex, labels = paste(c('No', 'Yes'), round(table_repeater/270,2)*100, '%'), main = 'Diagrama circular de repeater',col=c('lightblue3','lightblue1'))
table(df$repeater)
table(df$group)
describe(df$group)
table_group <- table(df$group)
pie(table_group, labels = paste(c('Afternoon', 'Morning'), round(table_group/270,2)*100, '%'), main = 'Diagrama circular de group',col=c('lightblue3','lightblue1'))
describe(df$nationality)
describe(df$nationality)
table_nationality <- table(df$nationality)
pie(table_nationality, labels = paste(c('Foreign', 'Spanish'), round(table_nationality/270,2)*100, '%'), main = 'Diagrama circular de nationality',col=c('lightblue3','lightblue1'))
(c(summary(df$n_subject),sd=sd(df$n_subject)))
par(mfrow=c(1,2), las=1)
hist(df$n_subject, ylab = 'Frecuencia', xlab = 'N_subject', main = 'Histograma de N_subject', col = 'lightblue3')
boxplot(df$n_subject, main = 'Boxplot de N_subject', col = 'lightblue3')
hist(df$n_subject, ylab = 'Frecuencia', xlab = 'N_subject', main = 'Histograma de N_subject', col = 'lightblue3')
(c(summary(df$n_test),sd=sd(df$n_test)))
par(mfrow=c(1,2), las=1)
hist(df$n_test, ylab = 'Frecuencia', xlab = 'N_test', main = 'Histograma de N_test', col = 'lightblue3')
boxplot(df$n_test, main = 'Boxplot de N_test', col = 'lightblue3')
(c(summary(df$note),sd=sd(df$note)))
par(mfrow=c(1,2), las=1)
hist(df$note, ylab = 'Frecuencia', xlab = 'Note', main = 'Histograma de note', col = 'lightblue3')
boxplot(df$note, main = 'Boxplot de note', col = 'lightblue3')
(c(summary(df$y),sd=sd(df$y)))
par(mfrow=c(1,2), las=1)
hist(df$y, ylab = 'Frecuencia', xlab = 'Y', main = 'Histograma de y', col = 'lightblue3')
boxplot(df$y, main = 'Boxplot de y', col = 'lightblue3')
setwd("~/Desktop/Estadística/4. Quart/Primer quatri/MODELS LINEALS GENERALITZATS/Pràctiques")
setwd("~/Desktop/Estadística/4. Quart/Primer quatri/MODELS LINEALS GENERALITZATS/Pràctiques")
summary(df)
pie(table_repeater, labels = paste(c('No', 'Yes'), round(table_repeater/270,2)*100, '%'), main = 'Diagrama circular de repeater',col=c('lightblue3','lightblue1'))
vars=colnames(df)[-1]
par(mfrow=c(2,4),mar=c(3,3,3,1))
for (va in vars){
if (!is.factor(df[,va])){
boxplot(as.formula(paste0(va,"~y")),df,main=va,col=c('lightblue3','lightblue1'),horizontal=T)
} else{
plot(as.formula(paste0("y~",va)),df,main=va,col=c('lightblue3','lightblue1'))
}
}
setwd("~/Desktop/Pràctica Recomptes")
colnames(df)[-1]
par(mfrow=c(2,4))
for (va in vars){
if (!is.factor(df[,va])){
boxplot(as.formula(paste0(va,"~y")),df,main=va,col=c('lightblue3','lightblue1'),horizontal=T)
} else{
plot(as.formula(paste0("y~",va)),df,main=va,col=c('lightblue3','lightblue1'))
}
}
for (va in vars){
if (!is.factor(df[,va])){
boxplot(as.formula(paste0(va,"~y")),df,main=va,col=c('lightblue3','lightblue1'),horizontal=T)
} else{
hist(as.formula(paste0("y~",va)),df,main=va,col=c('lightblue3','lightblue1'))
}
}
for (va in vars){
if (!is.factor(df[,va])){
boxplot(as.formula(paste0(va,"~y")),df,main=va,col=c('lightblue3','lightblue1'),horizontal=T)
} else{
plot(as.formula(paste0("y~",va)),df,main=va,col=c('lightblue3','lightblue1'))
}
}
#install.packages("catspec")
library(catspec)
levels(df$repeater)<-c('No','Si')
with(df,table(repeater,y))
with(df,table(y,repeater))
with(df,table(repeater,y))
ctab(df$repeater,df$y,type=c("n","r","t","r"),addmargins=T)
View(df)
with(df,tapply(n_subject,y,summary))
boxplot(n_subject~y,data=df,col=c('lightblue3','lightblue1'))
with(df,table(repeater,y))
d <- density(mtcars$repeater)
d <- density(mtcars$y)
df$y <- as.numeric(df$y)
d <- density(mtcars$y)
d <- density(df$y)
plot(d, df$repeater)
plot(df$repeater, d)
plot(c(df$repeater, d))
plot(df$repeater,d)
plot(d, df$repeater)
plot(x=d, y=df$repeater)
plot(df$repeater)
for (i in 1:nrow(df)){
if (df$repeater[i]== "No"){
dNo<- density(df$y)
}else{
dSi<- density(df$y)
}
}
plot(dNo)
plot(dSi)
plot(dNo)
table(df$repeater)
for (i in 1:nrow(df)){
if (df$repeater[i]== "No"){
dNo<- density(df$y[i])
}else{
dSi<- density(df$y[i])
}
}
No <- vector()
Yes <- vector()
for (i in 1:nrow(df)){
if (df$repeater[i]== "No"){
No<- c(No,df$y[i])
}else{
Yes<- c(Yes,df$y[i])
}
}
dNo<- density(No)
plot(dNo)
dYes<- density(Yes)
plot(dSi)
plot(dNo)
plot(dYes)
par(mfrow=c(1,2), las=1)
plot(dNo)
plot(dYes)
par(mfrow=c(1,2))
plot(dNo, main = "Plot de densidad de y para repeater=No")
plot(dYes, main = "Plot de densidad de y para repeater=Yes")
plot(density(df$y))
No
summary(No)
hist(dNo, main = "Densidad de y para repeater=No")
hist(No, main = "Densidad de y para repeater=No")
hist(Yes, main = "Densidad de y para repeater=Yes")
summary(c(No,Yes)
summary(c(No,Yes)
summary(c(No,Yes))
c(summary(Yes), summary(no))
c(summary(Yes), summary(No))
summary(Yes)
summary(No)
summary(Yes)
summary(No)
summary(Yes)
summary(No)
rbind("Repeater=No"=summary(No),"Repeater=Yes"=summary(Yes))
View(df)
c(summary(No),nrow(No))
nrow(No)
length(No)
summary(df$n_subject)
df$n_subject
df$n_test
summary(df$n_test)
levels(df$n_test)
level(df$n_test)
df$y
with(df,table(n_subject,y))
y_cat <- vector()
for (i in 1:nrow(df)){
if (df$y[i] <= 10){
y_cat[i]<- "Menos de 10"
}else if (df$y[i] > 10 & df$y[i] <= 20){
y_cat[i]<- "Entre 11 y 20"
}else if (df$y[i] > 20 & df$y[i] <= 30){
y_cat[i]<- "Entre 21 y 30"
}else if (df$y[i] > 30 & df$y[i] <= 40){
y_cat[i]<- "Entre 31 y 40"
}else if (df$y[i] > 40 & df$y[i] <= 50){
y_cat[i]<- "Entre 41 y 50"
}else if (df$y[i] > 50 & df$y[i] <= 60){
y_cat[i]<- "Entre 51 y 60"
}else if (df$y[i] > 60 & df$y[i] <= 70){
y_cat[i]<- "Entre 61 y 70"
}else{
y_cat[i]<- "Más de 70"
}
}
y_cat
y
df$y
y_cat="Menos de 10"
# Se divide la variable respuesta en 8 categorías:
y_cat <- vector()
for (i in 1:nrow(df)){
if (df$y[i] <= 10){
y_cat[i]<- "Menos de 10"
}else if (df$y[i] > 10 & df$y[i] <= 20){
y_cat[i]<- "Entre 11 y 20"
}else if (df$y[i] > 20 & df$y[i] <= 30){
y_cat[i]<- "Entre 21 y 30"
}else if (df$y[i] > 30 & df$y[i] <= 40){
y_cat[i]<- "Entre 31 y 40"
}else if (df$y[i] > 40 & df$y[i] <= 50){
y_cat[i]<- "Entre 41 y 50"
}else if (df$y[i] > 50 & df$y[i] <= 60){
y_cat[i]<- "Entre 51 y 60"
}else if (df$y[i] > 60 & df$y[i] <= 70){
y_cat[i]<- "Entre 61 y 70"
}else{
y_cat[i]<- "Más de 70"
}
}
y_cat == "Más de 70"
hist((y_cat == "Más de 70"), main = "Histograma de y", xlab="Repeater=No", col = 'lightblue4')
y_cat[y_cat == "Más de 70"]
hist(y_cat, main = "Histograma de y", xlab="Repeater=No", col = 'lightblue4')
plot(y_cat, main = "Histograma de y", xlab="Repeater=No", col = 'lightblue4')
plot(y_cat)
table(df$n_subject,y_cat))
table(df$n_subject,y_cat))
table(df$n_subject,y_cat)
ctab(df$n_subject,y_cat,type=c("n","r","t","r"),addmargins=T)
ctab(df$n_subject,as.factor(y_cat),type=c("n","r","t","r"),addmargins=T)
y_cat <- as.factor(y_cat)
table(df$n_subject,y_cat)
ctab(df$n_subject,y_cat,type=c("n","r","t","r"),addmargins=T)
df$n_subject <- as.factor(df$n_subject)
table(df$n_subject,y_cat)
ctab(df$n_subject,y_cat,type=c("n","r","t","r"),addmargins=T)
boxplot(df$n_subject~y_cat)
df <- read.table("data_status.txt", header=T)
# Se divide la variable respuesta en 8 categorías:
y_cat <- vector()
for (i in 1:nrow(df)){
if (df$y[i] <= 10){
y_cat[i]<- "Menos de 10"
}else if (df$y[i] > 10 & df$y[i] <= 20){
y_cat[i]<- "Entre 11 y 20"
}else if (df$y[i] > 20 & df$y[i] <= 30){
y_cat[i]<- "Entre 21 y 30"
}else if (df$y[i] > 30 & df$y[i] <= 40){
y_cat[i]<- "Entre 31 y 40"
}else if (df$y[i] > 40 & df$y[i] <= 50){
y_cat[i]<- "Entre 41 y 50"
}else if (df$y[i] > 50 & df$y[i] <= 60){
y_cat[i]<- "Entre 51 y 60"
}else if (df$y[i] > 60 & df$y[i] <= 70){
y_cat[i]<- "Entre 61 y 70"
}else{
y_cat[i]<- "Más de 70"
}
}
table(df$n_subject,y_cat)
boxplot(df$n_subject~y_cat)
# Se divide la variable respuesta en 8 categorías:
y_cat <- vector()
for (i in 1:nrow(df)){
if (df$y[i] <= 10){
y_cat[i]<- "< 10"
}else if (df$y[i] > 10 & df$y[i] <= 20){
y_cat[i]<- "11-20"
}else if (df$y[i] > 20 & df$y[i] <= 30){
y_cat[i]<- "21-30"
}else if (df$y[i] > 30 & df$y[i] <= 40){
y_cat[i]<- "31-40"
}else if (df$y[i] > 40 & df$y[i] <= 50){
y_cat[i]<- "41-50"
}else if (df$y[i] > 50 & df$y[i] <= 60){
y_cat[i]<- "51-60"
}else if (df$y[i] > 60 & df$y[i] <= 70){
y_cat[i]<- "61-70"
}else{
y_cat[i]<- ">70"
}
}
summary(df$y)
hist(df$n_subject~y_cat)
plot(df$n_subject~y_cat)
#install.packages("FactoMineR")
library(FactoMineR)
summary(df$y)
catdes(heart,7)
catdes(heart,8)
catdes(heart,6)
catdes(heart,7)
setwd("~/Desktop/Estadística/4. Quart/Primer quatri/MODELS LINEALS GENERALITZATS/Pràctiques")
View(df)
m0 <- glm(y ~ 1, family=poisson, data=df)
summary(m0)
m1.rep <- glm(y ~ repeater, family=poisson, data=df)
summary(m1.rep)
m1.subj <- glm(y ~ n_subject, family=poisson, data=df)
summary(m1.subj)
m1.group <- glm(y ~ group, family=poisson, data=df)
summary(m1.group)
m1.nat <- glm(y ~ nationality, family=poisson, data=df)
summary(m1.nat)
m1.test <- glm(y ~ n_test, family=poisson, data=df)
summary(m1.test)
m1.note <- glm(y ~ note, family=poisson, data=df)
summary(m1.note)
m2 <- glm(y ~ repeater+n_subject+group+nationality+n_test+note, family=poisson, data=df)
summary(m2)
summary(m1.note)
summary(m2)
m3 <- glm(y ~ repeater + n_subject + group + nationality + n_test + note + repeater:n_subject + repeater:group + repeater:nationality + repeater:n_test + repeater:note + n_subject:group + n_subject:nationality + group:nationality + group:n_test + group:note + nationality:n_test + nationality:note, family=poisson, data=df)
summary(m3)
summary(mstep <- step(glm(y ~ repeater + n_subject + group + nationality + n_test + note + repeater:n_subject + repeater:group + repeater:nationality + repeater:n_test + repeater:note + n_subject:group + n_subject:nationality + group:nationality + group:n_test + group:note + nationality:n_test + nationality:note, family=poisson, data=df, family=poisson, direction="both", k=log(nrow(heart2)))))
summary(mstep <- step(glm(y ~ repeater + n_subject + group + nationality + n_test + note + repeater:n_subject + repeater:group + repeater:nationality + repeater:n_test + repeater:note + n_subject:group + n_subject:nationality + group:nationality + group:n_test + group:note + nationality:n_test + nationality:note, family=poisson, data=df, family=poisson, direction="both", k=log(nrow(df)))))
summary(mstep <- step(glm(y ~ repeater + n_subject + group + nationality + n_test + note + repeater:n_subject + repeater:group + repeater:nationality + repeater:n_test + repeater:note + n_subject:group + n_subject:nationality + group:nationality + group:n_test + group:note + nationality:n_test + nationality:note, family=poisson, data=df, family=poisson(link="log"), direction="both", k=log(nrow(df)))))
summary(mstep <- step(glm(y ~ repeater + n_subject + group + nationality + n_test + note + repeater:n_subject + repeater:group + repeater:nationality + repeater:n_test + repeater:note + n_subject:group + n_subject:nationality + group:nationality + group:n_test + group:note + nationality:n_test + nationality:note, family=poisson, data=df, family=poisson(link="log-lineal"), direction="both", k=log(nrow(df)))))
summary(mstep <- step(glm(y ~ repeater + n_subject + group + nationality + n_test + note + repeater:n_subject + repeater:group + repeater:nationality + repeater:n_test + repeater:note + n_subject:group + n_subject:nationality + group:nationality + group:n_test + group:note + nationality:n_test + nationality:note, family=poisson, data=df, family=poisson(link="log"), direction="both", k=log(nrow(df)))))
summary(mstep <- step(glm(y ~ repeater + n_subject + group + nationality + n_test + note + repeater:n_subject + repeater:group + repeater:nationality + repeater:n_test + repeater:note + n_subject:group + n_subject:nationality + group:nationality + group:n_test + group:note + nationality:n_test + nationality:note, family=poisson, data=df, direction="both", k=log(nrow(df)))))
summary(mstep <- step(glm(y ~ repeater + n_subject + group + nationality + n_test + note + repeater:n_subject + repeater:group + repeater:nationality + repeater:n_test + repeater:note + n_subject:group + n_subject:nationality + group:nationality + group:n_test + group:note + nationality:n_test + nationality:note, family=poisson), data=df, direction="both", k=log(nrow(df))))
summary(mstep <- step(glm(y ~ repeater + n_subject + group + nationality + n_test + note + repeater:n_subject + repeater:group + repeater:nationality + repeater:n_test + repeater:note + n_subject:group + n_subject:nationality + group:nationality + group:n_test + group:note + nationality:n_test + nationality:note, data=df, family=poisson), direction="both", k=log(nrow(df))))
# H0: Model consistent amb les dades
m3$dev
m3$df.residual
# Test deviança  P(X2(59)>70.66)=0.14 >>0.05 -> H0 ACC
1 - pchisq(m3$dev,m3$df.residual)
m3$dev
pie(table_repeater, labels = paste(c('No', 'Yes'), round(table_repeater/228,2)*100, '%'), main = 'Diagrama circular de repeater',col=c('lightblue3','lightblue1'))
plot(residuals(m3,"pearson"))
residualPlot(m3)
residualPlot(m3)
plot(residuals(m3,"pearson"))
residualPlots(m3)
residualPlots(residuals(m3,"pearson"))
residualPlots(m3,layout=c(1, 2))
residualPlots(m3)
residualPlots(m3)
marginalModelPlots(m3,labels=row.names(df),id.method=abs(cooks.distance(m3)), id.n=5)
marginalModelPlots(m3,labels=row.names(df),id.method=abs(cooks.distance(m3)), id.n=6)
marginalModelPlots(m3,labels=row.names(df),id.method=abs(cooks.distance(m3)), id.n=1)
marginalModelPlots(m3,labels=row.names(df),id.method=abs(cooks.distance(m3))
marginalModelPlots(m3,labels=row.names(df),id.method=abs(cooks.distance(m3)))
marginalModelPlots(m3,labels=row.names(df),id.method=abs(cooks.distance(m3)))
marginalModelPlot(m3,labels=row.names(df),id.method=abs(cooks.distance(m3)))
